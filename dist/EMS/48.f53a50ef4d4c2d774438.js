(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"9hZi":function(e,t,n){"use strict";n.r(t);var i=n("mrSG"),s=n("CcnG"),a=n("qmRI"),r=function(){function e(e){this.ems=e,this.isinput=!1,this.selectallval=!1,this.index=1,this.roleData=[],this.permissionData=[],this.selectedPermissions=[],this.ischeckvalid=!1,this.selectAllcheck=!1,this.list2=[],this.list3="",this.isedit=!1,this.p=1,this.q=1,this.r=1,this.check=!1,this.popoverTitle="Delete Role",this.popoverMessage="Are you sure to delete",this.confirmClicked=!1,this.cancelClicked=!1,this.ems.active=2}return e.prototype.ngOnInit=function(){var e=this;this.sessionid=localStorage.getItem("sessionid"),this.uid=localStorage.getItem("uid"),this.ems.getPermissions(this.sessionid,this.uid).subscribe(function(t){if("Unauthorised access"==t.message&&e.ems.sessionlogout(),"Success"==t.status){e.permissionData=t.data;for(var n=0;n<e.permissionData.length;n++)e.list2.push({id:n,tittle:e.permissionData[n].action_name,codeval:e.permissionData[n].action_code,checked:!1})}}),this.ems.getRolladd(this.sessionid,this.uid).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),"Success"==t.status&&(e.roleData=t.data)}),this.list=[{id:1,title:"\u0410bcd",checked:!1},{id:2,title:"efgh",checked:!1},{id:3,title:"hijk",checked:!1},{id:4,title:"lmno",checked:!1}]},e.prototype.addActiontoList=function(){this.selectedPermissions=this.list2.filter(function(e){return e.checked})},e.prototype.EditRole=function(e){var t=this;this.role_id=e,$("html, body").animate({scrollTop:0}),this.isedit=!0,this.ems.singleRolladd(e,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),"Success"==e.status&&(t.role_Name=e.data[0].role_name,t.editPermissionChecked(e.data[0].role_permission),t.inputValue=t.role_Name,t.isedit=!0,t.addActiontoList())})},e.prototype.DeleteRole=function(e){var t=this;this.role_id=e,$("html, body").animate({scrollTop:0}),this.ems.deleteRolladd(this.role_id,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.ems.status=e.status,"Success"==e.status?(t.ems.msg=e.message,$("#myModal").modal("show"),t.ems.getRolladd(t.sessionid,t.uid).subscribe(function(e){"Success"==e.status&&(t.roleData=e.data)}),document.getElementById("Login").reset(),t.selectallval=!0,t.selectAll(),t.addActiontoList(),t.selectallval=!1,t.selectAllcheck=!1):"Bad request"==e.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=e.message,$("#myModal").modal("show"))})},e.prototype.changelist=function(){this.addActiontoList()},e.prototype.Addnewrole=function(e){var t=this;$("html, body").animate({scrollTop:0}),this.isinput=!1,this.check=!1,this.ischeckvalid=!0,this.list3="";for(var n=0;n<this.selectedPermissions.length;n++)this.list3=this.list3+this.selectedPermissions[n].codeval+"|";""!=this.list3&&(this.list3=this.list3.slice(0,-1)),this.inputValue?this.inputValue.match(/^[a-zA-Z][a-zA-Z ]*$/)?this.checkboxvalidation()?this.isedit?this.ems.updateRolladd(this.role_id,this.inputValue,this.list3,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.ems.status=e.status,"Success"==e.status?(t.ems.msg=e.message,$("#myModal").modal("show"),document.getElementById("Login").reset(),t.role_Name="",t.selectAllcheck=!1,t.selectallval=!0,t.selectAll(),t.addActiontoList(),t.selectallval=!1,t.ems.getRolladd(t.sessionid,t.uid).subscribe(function(e){"Success"==e.status&&(t.roleData=e.data)})):"Bad request"==e.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=e.message,$("#myModal").modal("show"))}):this.ems.addRolladd(this.inputValue,this.list3,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.ems.status=e.status,"Success"==e.status?(t.ems.msg=e.message,$("#myModal").modal("show"),document.getElementById("Login").reset(),t.selectallval=!0,t.selectAll(),t.addActiontoList(),t.selectallval=!1,t.selectAllcheck=!1,t.ems.getRolladd(t.sessionid,t.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),"Success"==e.status&&(t.roleData=e.data)})):"Bad request"==e.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=e.message,$("#myModal").modal("show"))}):(this.check=!0,$("html, body").animate({scrollTop:0})):this.isinput=!0:(this.isinput=!0,$("html, body").animate({scrollTop:0}))},e.prototype.selectAll=function(){if(1==this.selectallval){this.selectallval=!1;for(var e=0;e<this.list2.length;e++)this.list2[e].checked=!1}else{this.selectallval=!0;for(e=0;e<this.list2.length;e++)this.list2[e].checked=!0}this.addActiontoList()},e.prototype.onKey=function(e){this.inputValue=e.target.value},e.prototype.checkboxvalidation=function(){return""==this.list3?(this.ischeckvalid=!1,!1):(this.ischeckvalid=!0,!0)},e.prototype.editPermissionChecked=function(e){this.list2=[];for(var t=0;t<this.permissionData.length;t++)e.includes(this.permissionData[t].action_code)?this.list2.push({id:t,tittle:this.permissionData[t].action_name,codeval:this.permissionData[t].action_code,checked:!0}):this.list2.push({id:t,tittle:this.permissionData[t].action_name,codeval:this.permissionData[t].action_code,checked:!1})},e=i.b([Object(s.Component)({selector:"app-roleadd",template:n("gQbv"),styles:[n("gYXG")]}),i.d("design:paramtypes",[a.a])],e)}(),o=n("xkgV"),l=n("Zseb"),c=n("Ip0R"),d=n("ZYCi"),p=n("gIcY"),u=n("fCu2");n.d(t,"routes",function(){return g}),n.d(t,"RoleaddModule",function(){return h});var g=[{path:"",component:r,pathMatch:"full"}],h=function(){function e(){}return e.routes=g,e=i.b([Object(s.NgModule)({imports:[c.CommonModule,d.RouterModule.forChild(g),p.FormsModule,l.a,u.a.forRoot({confirmButtonType:"danger"}),o.a],declarations:[r],providers:[],bootstrap:[r]})],e)}()},gQbv:function(e,t){e.exports='<div class="row brdcrm-mrgn">\r\n        <div class="col-md-6 col-sm-6 col-xs-8">\r\n          <div >\r\n          <div class="panel-heading mainpanel-hd text-uppercase">\r\n          \r\n          </div>\r\n          </div>\r\n         </div>\r\n         <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n          <ol class="breadcrumb">\r\n            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>\r\n            <li ><a href="#/app/preExam"> Pre Examination Management</a></li>\r\n            <li class="active"> Role add</li>\r\n            </ol>\r\n        </div>\r\n</div>\r\n\r\n<div *ngIf="ems.isAdmin">\r\n    <form #f="ngForm" id="Login">\r\n        <section>\r\n                    <div class="row margin-card">\r\n                        <div class="col-md-12" id="first-content">\r\n                            <div class="panel panel-primary" id="shadows">\r\n                                <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Add Role\r\n                                </div>\r\n                                <div class="panel-body">\r\n                                    <div class="row">\r\n                                      \r\n                                        <div class="col-md-12">\r\n        \r\n                                            <div class="form-group">\r\n                                                <label for="email" id="labels">Role</label>\r\n                                                <input type="text" maxlength="30" [(ngModel)]="role_Name" name="role_Name" required pattern="[a-zA-Z][a-zA-Z ]*" #nameControl="ngModel" (keyup)="onKey($event)" class="form-control input-sm" placeholder="Enter Role" name="role_Name">\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    <div *ngIf="isinput" class="red-text center error-message"\r\n                                        style="text-align: center;font-size: 15px;color:red;">\r\n                                        Please add the role name\r\n                                    </div>\r\n                                    <span style="color:red;" class="help-block" *ngIf="nameControl.errors?.required && nameControl.touched">\r\n                                            Name is required\r\n                                        </span>\r\n                                        <label style="color:red;" class="input-sm" *ngIf="nameControl.errors?.pattern && nameControl.touched && !(nameControl.errors?.required)">\r\n                                            Only Aphabets and space allowed\r\n                                        </label>\r\n                                       \r\n                                    </div>\r\n        \r\n                                </div>\r\n                                <div class="panel-footer panel-default text-right">\r\n                                    \r\n                                </div>\r\n        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n        </form>\r\n            <section>\r\n               <div class="row">\r\n                       <div class="col-md-5">\r\n                          <div class="panel panel-primary" id="shadows">\r\n                             <div class="panel-heading" id="head-title">\r\n                                <i class="fa fa-lock"></i>&nbsp;Permission list\r\n                             </div>\r\n                             <div *ngIf="check" class="red-text center error-message"\r\n                             style="text-align: center;font-size: 15px;color:red;">\r\n                             Please check atleast 1 permission\r\n                            </div>\r\n                             <div class="panel-body">\r\n                                <div class="row">\r\n                                        <div class="form-group">\r\n                                    <div class="col-md-12">\r\n                                         <ul class="list-group">\r\n                                           <li class="list-group-item" > \r\n                                            <input type="checkbox"   [(ngModel)]="selectAllcheck" name="selectAllcheck" (change)="selectAll($event)" value="true"> \r\n                                            <span class="label-text" id="select_all">&nbsp;Select all</span>\r\n                                           </li>\r\n                                        </ul>\r\n\r\n                                    </div>\r\n                                        </div>\r\n        \r\n                                   <div class="col-md-12 col-sm-12 col-xs-12">\r\n                                      <ul class="list-group">\r\n                                        <li class="list-group-item" *ngFor="let item of list2 | paginate: { id: \'some_id\', itemsPerPage: 8, currentPage: q };">\r\n                                          <input type="checkbox" (change)="changelist($event)" [(ngModel)]="item.checked">&nbsp;{{item.tittle}}-<b>{{item.codeval}}</b>\r\n                                        </li>\r\n                                      </ul>\r\n                                      <pagination-controls style="text-align:center;" id="some_id" (pageChange)="q = $event" >\r\n                                        </pagination-controls>\r\n                                    </div>\r\n        \r\n                                </div>\r\n                             </div>\r\n                             <div class="panel-footer text-right">\r\n                             </div>\r\n                          </div>\r\n                       </div>\r\n                       <div class="col-md-1">\r\n                        <button class="btn btn-default  btn-block" id="list-btn" (click)="addActiontoList()"><i class="fa fa-arrow-right" aria-hidden="true"></i></button><br>\r\n        \r\n                       </div>\r\n                       <div class="col-md-6">\r\n                          <div class="panel panel-primary " id="shadows">\r\n                             <div class="panel-heading" id="head-title">\r\n                                <i class="fa fa-info-circle"></i>&nbsp;Selected Permission Details\r\n                             </div>\r\n                             <div class="panel-body">\r\n                                <div class="row">\r\n                                     <div class="col-md-12">\r\n                                         <ul class="list-group">\r\n                                         <li class="list-group-item"> <i class="fa fa-list"></i>&nbsp;<b>Lists</b></li>\r\n                                     </ul>\r\n                                    </div>\r\n        \r\n                                   <div class="col-md-12 col-sm-12 col-xs-12">\r\n        \r\n                                   <ul class="list-group" >\r\n                                        \x3c!-- *ngFor="let i of selectedPermissions" --\x3e\r\n                                    <li  class="list-group-item" *ngFor="let i of selectedPermissions | paginate: { id: \'somenew_id\', itemsPerPage: 8, currentPage: r };" ><input type="checkbox" name="check" id="checklists"><span class="label-text">{{i.tittle}}</span></li>\r\n                                  </ul>\r\n                                  <pagination-controls style="text-align:center;" id="somenew_id" (pageChange)="r = $event" >\r\n                                </pagination-controls>\r\n                                   </div>\r\n        \r\n                                </div>\r\n                             </div>\r\n                             <div class="panel-footer text-right">\r\n                             </div>\r\n                          </div>\r\n                       </div>\r\n                    </div>\r\n        </section>\r\n        <section>\r\n            <div class="row">\r\n                <div class="col-md-12">\r\n                    <div class=" text-right">\r\n                        \x3c!-- <button type="submit" class="btn btn-primary  btn-sm" (click)="Addnewrole()"><i class="fa fa-plus"></i>&nbsp;Add</button> --\x3e\r\n                        <div *ngIf="isedit==false" class="panel-footer panel-default text-right">\r\n                            <button type="submit" class="btn btn-primary btn-sm" (click)="Addnewrole()"><i class="fa fa-plus"></i>&nbsp;Add</button>\r\n                        </div>\r\n                        <div *ngIf="isedit==true"class="panel-footer panel-default text-right">\r\n                          <button type="submit" class="btn btn-primary btn-sm" (click)="Addnewrole()"><i class="fa fa-wrench" aria-hidden="true"></i>&nbsp;Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </section>  \r\n        \r\n        <br>    \r\n        \r\n        <section>\r\n                    <div class="row">\r\n                        <div class="col-md-12" id="first-content">\r\n                            <div class="panel panel-primary" id="shadows">\r\n                                <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Assigned Role details\r\n                                </div>\r\n                                <div class="panel-body" id="table-contents">\r\n        \r\n                                    <div class="row">\r\n        \r\n                                        <div id="no-more-tables">\r\n        \r\n                                            <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf"  id="#tableflow">\r\n                                                <thead class="cf">\r\n                                                    <tr>\r\n                                                        <th>No</th>\r\n                                                        <th>Role name</th>\r\n                                                         <th>Permission lists</th>\r\n                                                         <th style="text-align: center">Edit</th>\r\n        \r\n                                                         <th style="text-align: center">Delete</th>\r\n        \r\n        \r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    \x3c!-- <tr>\r\n                                                        <td data-title="No">1</td>\r\n                                                        <td data-title="Role name">Public user</td>\r\n                                                        <td data-title="Permission lists">user</td>\r\n                                                    </tr> --\x3e\r\n                                                    <tr   *ngFor="let i of roleData | paginate: { id: \'some_id2\', itemsPerPage: 10, currentPage: p };let j=index;" >\r\n                                                      <td data-title="No">{{(10*(p-1))+j+1}}</td>\r\n                                                      <td data-title="Role name">{{i.role_name}}</td>\r\n                                                      <td data-title="Permission lists" id="flow">{{i.role_permission}}</td>\r\n                                                      <td style="text-align: center" data-title="Edit"><a (click)="EditRole(i.role_id)" style="cursor:pointer"><i class="fa fa-pencil"></i></a>\r\n                                                      \x3c!-- <td data-title="Delete"><a (click)="DeleteRole(i.role_id)" style="cursor:pointer"><i class="fa fa-trash"></i></a> </td> --\x3e\r\n                                                      <td style="text-align: center" data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                                                        mwlConfirmationPopover\r\n                                                        [popoverTitle]="popoverTitle"\r\n                                                        [popoverMessage]="popoverMessage"\r\n                                                        placement="left"\r\n                                                        (confirm)="DeleteRole(i.role_id)"\r\n                                                        (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td>\r\n                                                    </tr>\r\n        \r\n                                                </tbody>\r\n                                            </table>\r\n                                            <pagination-controls style="text-align:center;" id=\'some_id2\' (pageChange)="p = $event" >\r\n                                                </pagination-controls>\r\n                                        </div>\r\n                                    </div>\r\n        \r\n                                </div>\r\n                                <div class="panel-footer panel-default text-right">\r\n        \r\n                                </div>\r\n        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n        </section>\r\n</div>\r\n\r\n<div *ngIf="!ems.isAdmin">\r\n\r\n    <section>\r\n            <div class="row margin-card">\r\n                <div class="col-md-12" id="first-content">\r\n                    <div class="panel panel-primary" id="shadows">\r\n                        <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Assigned Role details\r\n                        </div>\r\n                        <div class="panel-body" id="table-contents">\r\n\r\n                            <div class="row">\r\n\r\n                                <div id="no-more-tables">\r\n\r\n                                    <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf" id="#tableflow">\r\n                                        <thead class="cf">\r\n                                            <tr>\r\n                                                <th>No</th>\r\n                                                <th>Role name</th>\r\n                                                 <th>Permission lists</th>\r\n                                                 \r\n\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            \x3c!-- <tr>\r\n                                                <td data-title="No">1</td>\r\n                                                <td data-title="Role name">Public user</td>\r\n                                                <td data-title="Permission lists">user</td>\r\n                                            </tr> --\x3e\r\n                                            <tr  *ngFor="let i of roleData | paginate: { itemsPerPage: 30, currentPage: p };let j=index;">\r\n                                              <td data-title="No">{{(30*(p-1))+j+1}}</td>\r\n                                              <td data-title="Role name">{{i.role_name}}</td>\r\n                                              <td data-title="Permission lists" id="flow" >{{i.role_permission}}</td>\r\n                                             \r\n                                            </tr>\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style="text-align:center;" (pageChange)="p = $event" >\r\n                                        </pagination-controls>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class="panel-footer panel-default text-right">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n</section>\r\n</div>\r\n\r\n'},gYXG:function(e,t){e.exports="table {table-layout:fixed; }\r\n\r\n/* #flow { overflow:scroll;white-space:nowrap;  overflow-y: hidden; }  */\r\n\r\n#flow {display: block;   overflow-x: auto;    white-space: nowrap;}"},xkgV:function(e,t,n){"use strict";n.d(t,"a",function(){return p});var i=n("CcnG"),s=n("Ip0R"),a=function(){function e(){this.change=new i.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var t=!1;for(var n in this.instances[e.id])e[n]!==this.instances[e.id][n]&&(this.instances[e.id][n]=e[n],t=!0);return t},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,t){if(this.instances[e]){var n=this.instances[e];t<=Math.ceil(n.totalItems/n.itemsPerPage)&&1<=t&&(this.instances[e].currentPage=t,this.change.emit(e))}},e.prototype.setTotalItems=function(e,t){this.instances[e]&&0<=t&&(this.instances[e].totalItems=t,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,t){this.instances[e]&&(this.instances[e].itemsPerPage=t,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},e}(),r=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,t){if(t instanceof Array&&(t=t[0]),!(e instanceof Array)){var n=t.id||this.service.defaultId;return this.state[n]?this.state[n].slice:e}var i,s,a=t.totalItems&&t.totalItems!==e.length,o=this.createInstance(e,t),l=o.id,c=o.itemsPerPage;if(this.service.register(o),!a&&e instanceof Array){if(c=+c||r,s=(i=(o.currentPage-1)*c)+c,this.stateIsIdentical(l,e,i,s))return this.state[l].slice;var d=e.slice(i,s);return this.saveState(l,e,d,i,s),this.service.change.emit(l),d}return this.saveState(l,e,e,i,s),e},e.prototype.createInstance=function(e,t){var n=t;return this.checkConfig(n),{id:null!=n.id?n.id:this.service.defaultId(),itemsPerPage:+n.itemsPerPage||0,currentPage:+n.currentPage||1,totalItems:+n.totalItems||e.length}},e.prototype.checkConfig=function(e){var t=["itemsPerPage","currentPage"].filter(function(t){return!(t in e)});if(0<t.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+t.join(", "))},e.prototype.saveState=function(e,t,n,i,s){this.state[e]={collection:t,size:t.length,slice:n,start:i,end:s}},e.prototype.stateIsIdentical=function(e,t,n,i){var s=this.state[e];return!!s&&(!(s.size!==t.length||s.start!==n||s.end!==i)&&s.slice.every(function(e,i){return e===t[n+i]}))},e.decorators=[{type:i.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:a}]},e}();function l(e){return!!e&&"false"!==e}var c=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new i.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=l(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:i.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:i.ChangeDetectionStrategy.OnPush,encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:i.Input}],maxSize:[{type:i.Input}],directionLinks:[{type:i.Input}],autoHide:[{type:i.Input}],responsive:[{type:i.Input}],previousLabel:[{type:i.Input}],nextLabel:[{type:i.Input}],screenReaderPaginationLabel:[{type:i.Input}],screenReaderPageLabel:[{type:i.Input}],screenReaderCurrentLabel:[{type:i.Input}],pageChange:[{type:i.Output}]},e}(),d=function(){function e(e,t){var n=this;this.service=e,this.changeDetectorRef=t,this.maxSize=7,this.pageChange=new i.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){n.id===e&&(n.updatePageLinks(),n.changeDetectorRef.markForCheck(),n.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,t=this.service.getInstance(this.id),n=this.outOfBoundCorrection(t);n!==t.currentPage?setTimeout(function(){e.setCurrent(n),e.pages=e.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,e.maxSize)}):this.pages=this.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,t,n,i){i=+i;for(var s=[],a=Math.ceil(n/t),r=Math.ceil(i/2),o=e<=r,l=a-r<e,c=!o&&!l,d=i<a,p=1;p<=a&&p<=i;){var u=void 0,g=this.calculatePageNumber(p,e,i,a);u=d&&(2===p&&(c||l)||p===i-1&&(c||o))?"...":g,s.push({label:u,value:g}),p++}return s},e.prototype.calculatePageNumber=function(e,t,n,i){var s=Math.ceil(n/2);return e===n?i:1===e?e:n<i?i-s<t?i-n+e:s<t?t-s+e:e:e},e.decorators=[{type:i.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:a},{type:i.ChangeDetectorRef}]},e.propDecorators={id:[{type:i.Input}],maxSize:[{type:i.Input}],pageChange:[{type:i.Output}]},e}(),p=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[s.CommonModule],declarations:[o,c,d],providers:[a],exports:[o,c,d]}]}],e.ctorParameters=function(){return[]},e}()}}]);