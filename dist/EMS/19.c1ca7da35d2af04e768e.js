(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{Mwmv:function(e,n,t){"use strict";t.r(n);var a=t("mrSG"),i=t("CcnG"),r=t("ZYCi"),s=t("qmRI"),o=function(){function e(e,n){var t=this;this.router=e,this.ems=n,this.errMsg=!1,this.isAdd=!1,this.supervisorDetails=[],this.centerDetails=[],this.isDel=!1,this.campData=[],this.campData1=[],this.chiefData1=[],this.chiefData=[],this.examData=[],this.addData=[],this.isedit=!1,this.p=1,this.popoverTitle="Delete Additional Examiner",this.popoverMessage="Are you sure to delete",this.confirmClicked=!1,this.cancelClicked=!1,this.additionalDetails=[],this.ems.active=5,this.ems.isAdmin=!0,this.ems.roleName="Administrator",this.ems.login("emsadmin@yopmail.com","Test@123").subscribe(function(e){"Success"==e.status&&(localStorage.setItem("sessionid",e.data.session_token),localStorage.setItem("uid",e.data.user_id),localStorage.setItem("role",e.data.role_name),localStorage.setItem("cen_id",e.data.cen_id),localStorage.setItem("username",e.data.user_name),localStorage.setItem("permission",e.data.action_list),t.sessionid=localStorage.getItem("sessionid"),t.uid=localStorage.getItem("uid"),t.ems.getAdditionaltDetails(t.sessionid,t.uid).subscribe(function(e){t.additionalDetails=e.data}),t.ems.getCamp(t.sessionid,t.uid).subscribe(function(e){t.campData1=e.data}),t.ems.getChiefExaminerInfo(t.sessionid,t.uid).subscribe(function(e){t.chiefData=e.data}),t.ems.getExam(t.sessionid,t.uid).subscribe(function(e){t.examData=e.data}))})}return e.prototype.addAdditonal=function(e){var n=this;e.invalid?this.errMsg=!0:(this.errMsg=!1,$("html, body").animate({scrollTop:0}),this.ems.addAdditionaltDetails(this.examId,this.campId,this.chiefId,this.addId,this.sessionid,this.uid).subscribe(function(t){n.ems.status=t.status,"Success"==t.status?(n.ems.msg=t.message,$("#myModal").modal("show"),n.ems.getAdditionaltDetails(n.sessionid,n.uid).subscribe(function(e){n.additionalDetails=e.data}),n.chiefId="",e.reset()):(0==t.data.length&&(n.nullMessage=!0),"Bad request"==t.message?(n.ems.msg="Internal Server Error",$("#myModal").modal("show")):(n.ems.msg=t.message,$("#myModal").modal("show")))}))},e.prototype.deleteAdditonal=function(e){var n=this;$("html, body").animate({scrollTop:0}),this.ems.deleteAdditionaltDetails(e,this.sessionid,this.uid).subscribe(function(e){n.ems.status=e.status,"Success"==e.status?(n.ems.msg=e.message,$("#myModal").modal("show"),n.ems.getAdditionaltDetails(n.sessionid,n.uid).subscribe(function(e){n.additionalDetails=e.data})):(0==e.data.length&&(n.nullMessage=!0),"Bad request"==e.message?(n.ems.msg="Internal Server Error",$("#myModal").modal("show")):(n.ems.msg=e.message,$("#myModal").modal("show")))})},e.prototype.ngOnInit=function(){},e.prototype.onChange1=function(e){var n=this;this.campData=[],this.addData=[],this.campData=[],this.chiefData1=[],this.campId="",this.chiefId="",this.addId="",this.ems.getCampnew(this.examId,e,this.sessionid,this.uid).subscribe(function(e){n.campData=e.data}),this.ems.getTeacherByPgm(e,this.sessionid,this.uid).subscribe(function(e){n.addData=e.data})},e.prototype.onChange=function(e){var n=this;this.pgmData=[],this.campData=[],this.addData=[],this.chiefData1=[],this.campId="",this.chiefId="",this.pgmId="",this.addId="",this.examId=e,this.ems.getprglist(e,this.sessionid,this.uid).subscribe(function(e){n.pgmData=e.data})},e.prototype.onChange3=function(e){this.chiefId="",this.chiefData1=[];for(var n=0;n<this.chiefData.length;n++)this.chiefData[n].cen_id==e&&this.chiefData1.push(this.chiefData[n])},e=a.b([Object(i.Component)({selector:"app-additionalexaminer",template:t("NA4v"),styles:[t("mvMV")]}),a.d("design:paramtypes",[r.Router,s.a])],e)}(),l=t("xkgV"),d=t("fCu2"),c=t("Zseb"),p=t("Ip0R"),u=t("gIcY");t.d(n,"routes",function(){return g}),t.d(n,"AdditionalexaminerModule",function(){return h});var g=[{path:"",component:o,pathMatch:"full"}],h=function(){function e(){}return e.routes=g,e=a.b([Object(i.NgModule)({imports:[p.CommonModule,r.RouterModule.forChild(g),u.FormsModule,c.a,d.a.forRoot({confirmButtonType:"danger"}),l.a,c.a],declarations:[o],providers:[],bootstrap:[o]})],e)}()},NA4v:function(e,n){e.exports='\x3c!-- <div class="row brdcrm-mrgn">\r\n        <div class="col-md-6 col-sm-6 col-xs-8">\r\n          <div >\r\n          <div class="panel-heading mainpanel-hd text-uppercase">\r\n          \r\n          </div>\r\n          </div>\r\n         </div>\r\n         <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n          <ol class="breadcrumb">\r\n            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>\r\n            <li ><a href="#/app/evaluation"> Evaluation Management</a></li>\r\n            <li class="active">Additional examiner</li>\r\n            </ol>\r\n        </div>\r\n</div> --\x3e\r\n<div *ngIf="ems.isAdmin">\r\n<section>\r\n        <div class="row margin-card">\r\n            <form #f="ngForm" (ngSubmit)="addAdditonal(f)">\r\n\r\n            <div class="col-md-12" id="first-content">\r\n                <div class="panel panel-primary" id="shadows">\r\n                    <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Add Additional Examiner\r\n                    </div>\r\n                    <div class="panel-body">\r\n                        \x3c!-- !removed  --\x3e\r\n                        \x3c!-- !<div class="row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                       \r\n                                    <label for="email" id="labels">Exam:<strong style="color:red;">*</strong></label>\r\n                                    <select class="form-control input-sm" [(ngModel)]="examId"    required #examControl="ngModel" name="examNameId" >\r\n                                      \r\n                                    <option disabled hidden value="undefined"\r\n                                    disabled selected>----Select Exam----</option>\r\n                                    <option *ngFor="let k of examData" value="{{k.exam_id}}" >{{k.exam_name}}</option>\r\n                                    </select> \r\n                                    <span style="color:red;" class="help-block" *ngIf="examControl.invalid && examControl.touched">\r\n                                        Must choose a valid exam\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        \x3c!-- !<div class="row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label for="email" id="labels">District:<strong style="color:red;">*</strong></label>\r\n                                       \r\n                                    <select  type="text" [(ngModel)]="districtName" (ngModelChange)="onChange($event)" #districtControl="ngModel" required name="districtName" class="form-control input-sm">\r\n                                        <option hidden value="undefined"\r\n                                        disabled selected>----select Center District----</option>\r\n                                        <option  value="Kottayam" >Kottayam</option>\r\n                                        <option  value="Pathanamthitta" >Pathanamthitta</option>\r\n                                        <option  value="Idukki" >Idukki</option>\r\n                                        <option  value="Alappuzha" >Alappuzha</option>\r\n                                        <option  value="Ernakulam" >Ernakulam</option>\r\n                                     </select>\r\n                  \r\n                                     <span style="color:red;" class="help-block" *ngIf="districtControl.invalid && districtControl.touched">\r\n                                         Must choose a valid district\r\n                                     </span>\r\n                                </div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                        <div class="row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                  <label for="email" id="labels">Exam<strong style="color:red;">*</strong></label>\r\n                                  <select class="form-control input-sm" [(ngModel)]="examId" (ngModelChange)="onChange($event)"   required #examControl="ngModel" name="examNameId" >\r\n                                    \r\n                                  <option disabled hidden value="undefined"\r\n                                  disabled selected>----Select Exam----</option>\r\n                                  <option *ngFor="let k of examData" value="{{k.exam_id}}" >{{k.exam_name}}</option>\r\n                                  </select> \r\n                                  <span style="color:red;" class="help-block" *ngIf="examControl.invalid && examControl.touched">\r\n                                      Must choose a valid exam\r\n                                  </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="row">\r\n                          <div class="col-md-12">\r\n                               <div class="form-group">\r\n                                 <label for="email" id="labels">Programme<strong style="color:red;">*</strong></label>\r\n                                 <select class="form-control input-sm" required #pgmControl="ngModel" (ngModelChange)="onChange1($event)" [(ngModel)]="pgmId" name="pgmId" >\r\n                                   \r\n                                 <option hidden value="undefined"\r\n                                 disabled selected>----Select Programme----</option>\r\n                                 <option *ngFor="let k of pgmData" value="{{k.program_id}}" >{{k.program_name}}</option>\r\n                                 </select> \r\n                                 <span style="color:red;" class="help-block" *ngIf="pgmControl.invalid && pgmControl.touched">\r\n                                     Must choose a valid programme\r\n                                 </span>\r\n                               </div>\r\n                           </div>\r\n  \r\n                       </div>\r\n                        <div class="row">\r\n                           <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label for="email" id="labels">Camp<strong style="color:red;">*</strong></label>\r\n                                    <select class="form-control input-sm"  (ngModelChange)="onChange3($event)" required #campControl="ngModel" [(ngModel)]="campId" name="campId">\r\n                                      \r\n                                    <option hidden value="undefined"\r\n                                    disabled selected>----Select Camp----</option>\r\n                                    <option *ngFor="let k of campData" value="{{k.camp_id}}" >{{k.camp_name}}</option>\r\n                                    </select> \r\n                                    <span style="color:red;" class="help-block" *ngIf="campControl.invalid && campControl.touched">\r\n                                        Must choose a valid camp\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                         <div class="row">\r\n                           <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label for="email" id="labels">Chief examiner<strong style="color:red;">*</strong></label>\r\n                                    <select class="form-control input-sm" required #chiefControl="ngModel" [(ngModel)]="chiefId" name="chiefId">\r\n                                      \r\n                                    <option hidden value="undefined"\r\n                                    disabled selected>----Select Chief examiner----</option>\r\n                                    <option *ngFor="let k of chiefData1" value="{{k.chief_id}}" >{{k.chief_name}}</option>\r\n                                    </select> \r\n                                    <span style="color:red;" class="help-block" *ngIf="chiefControl.invalid && chiefControl.touched">\r\n                                        Must choose a valid chief\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class="row">\r\n                           <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label for="email" id="labels">Additional<strong style="color:red;">*</strong></label>\r\n                                    <select class="form-control input-sm" required #addControl="ngModel" [(ngModel)]="addId" name="addId">\r\n                                      \r\n                                        <option hidden value="undefined"\r\n                                        disabled selected>----Select Additional examiner----</option>\r\n                                        <option *ngFor="let k of addData" value="{{k.teacher_id}}" >{{k.teacher_name}}</option>\r\n                                        </select> \r\n                                        <span style="color:red;" class="help-block" *ngIf="addControl.invalid && addControl.touched">\r\n                                            Must choose a valid additional examiner\r\n                                        </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div *ngIf="errMsg" class="red-text center error-message"\r\n                    style="text-align: center;font-size: 15px;color:red;">\r\n                    Please fill the required fields\r\n                  </div>\r\n                    <div *ngIf="isedit==false" class="panel-footer panel-default text-right">\r\n                        <button type="submit" class="btn btn-primary btn-sm" ><i class="fa fa-rocket"></i>&nbsp;Add</button>\r\n                    </div>\r\n                    <div *ngIf="isedit==true"class="panel-footer panel-default text-right">\r\n                      <button type="submit" class="btn btn-primary btn-sm" ><i class="fa fa-wrench" aria-hidden="true"></i>&nbsp;Update</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n</section>\r\n\r\n<section>\r\n        <div class="row">\r\n            <div class="col-md-12" id="first-content">\r\n                <div class="panel panel-primary" id="shadows">\r\n                    <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Additional Examiner details\r\n                    </div>\r\n                    <div class="panel-body" id="table-contents">\r\n\r\n                        <div class="row">\r\n\r\n                            <div id="no-more-tables">\r\n\r\n                                <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                                    <thead class="cf">\r\n                                        <tr>\r\n                                            <th>No</th>\r\n                                            <th>Name</th>\r\n                                            <th>Camp</th>\r\n                                            <th>Chief</th>\r\n                                            <th>Chairman</th>\r\n                                            <th>Delete</th>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor="let item of additionalDetails | paginate: { itemsPerPage: 5, currentPage: p }; let j= index">\r\n                                            <td data-title="No">{{(5*(p-1))+j+1}}</td>\r\n                                            <td data-title="Name">{{item.additional_name}}</td>\r\n                                            <td data-title="Camp">{{item.cen_name}}</td>\r\n                                            <td data-title="Chief">{{item.chief_name}}</td>\r\n                                            <td data-title="Chairman">{{item.chairman_name}}</td>\r\n\r\n                                            <td data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                                              mwlConfirmationPopover\r\n                                              [popoverTitle]="popoverTitle"\r\n                                              [popoverMessage]="popoverMessage"\r\n                                              placement="left"\r\n                                              (confirm)="deleteAdditonal(item.additional_id)"\r\n                                              (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td>\r\n                                          \r\n                                        </tr>\r\n                                       \r\n\r\n                                    </tbody>\r\n                                </table>\r\n                                <pagination-controls style="text-align:center;" (pageChange)="p = $event" >\r\n                                    </pagination-controls>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="panel-footer panel-default text-right">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n</section>\r\n</div>\r\n\r\n<div *ngIf="!ems.isAdmin">\r\n<section>\r\n            <div class="row">\r\n                <div class="col-md-12" id="first-content">\r\n                    <div class="panel panel-primary" id="shadows">\r\n                        <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Additional Examiner details\r\n                        </div>\r\n                        <div class="panel-body" id="table-contents">\r\n    \r\n                            <div class="row">\r\n    \r\n                                <div id="no-more-tables">\r\n    \r\n                                    <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                                        <thead class="cf">\r\n                                            <tr>\r\n                                                <th>No</th>\r\n                                                <th>Name</th>\r\n                                                <th>Camp</th>\r\n                                                <th>Chief</th>\r\n                                                <th>Chairman</th>\r\n                                                \x3c!-- <th>Edit</th> --\x3e\r\n                                                \r\n    \r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor="let item of additionalDetails | paginate: { itemsPerPage: 20, currentPage: p }; let j= index">\r\n                                                <td data-title="No">{{(20*(p-1))+j+1}}</td>\r\n                                                <td data-title="Name">{{item.additional_name}}</td>\r\n                                                <td data-title="Camp">{{item.cen_name}}</td>\r\n                                                <td data-title="Chief">{{item.chief_name}}</td>\r\n                                                <td data-title="Chairman">{{item.chairman_name}}</td>\r\n                                                \x3c!-- <td data-title="Edit"><a   (click)="editAdditonal(item.additional_id)"style="cursor:pointer"><i class="fa fa-pencil"></i></a>&nbsp;</td> --\x3e\r\n    \r\n                                               \r\n                                              \r\n                                            </tr>\r\n                                           \r\n    \r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style="text-align:center;" (pageChange)="p = $event" >\r\n                                        </pagination-controls>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                        <div class="panel-footer panel-default text-right">\r\n    \r\n                        </div>\r\n    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </section>\r\n    </div>'},mvMV:function(e,n){e.exports=""},xkgV:function(e,n,t){"use strict";t.d(n,"a",function(){return p});var a=t("CcnG"),i=t("Ip0R"),r=function(){function e(){this.change=new a.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var n=!1;for(var t in this.instances[e.id])e[t]!==this.instances[e.id][t]&&(this.instances[e.id][t]=e[t],n=!0);return n},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,n){if(this.instances[e]){var t=this.instances[e];n<=Math.ceil(t.totalItems/t.itemsPerPage)&&1<=n&&(this.instances[e].currentPage=n,this.change.emit(e))}},e.prototype.setTotalItems=function(e,n){this.instances[e]&&0<=n&&(this.instances[e].totalItems=n,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,n){this.instances[e]&&(this.instances[e].itemsPerPage=n,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var n={};for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t]);return n},e}(),s=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,n){if(n instanceof Array&&(n=n[0]),!(e instanceof Array)){var t=n.id||this.service.defaultId;return this.state[t]?this.state[t].slice:e}var a,i,r=n.totalItems&&n.totalItems!==e.length,o=this.createInstance(e,n),l=o.id,d=o.itemsPerPage;if(this.service.register(o),!r&&e instanceof Array){if(d=+d||s,i=(a=(o.currentPage-1)*d)+d,this.stateIsIdentical(l,e,a,i))return this.state[l].slice;var c=e.slice(a,i);return this.saveState(l,e,c,a,i),this.service.change.emit(l),c}return this.saveState(l,e,e,a,i),e},e.prototype.createInstance=function(e,n){var t=n;return this.checkConfig(t),{id:null!=t.id?t.id:this.service.defaultId(),itemsPerPage:+t.itemsPerPage||0,currentPage:+t.currentPage||1,totalItems:+t.totalItems||e.length}},e.prototype.checkConfig=function(e){var n=["itemsPerPage","currentPage"].filter(function(n){return!(n in e)});if(0<n.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+n.join(", "))},e.prototype.saveState=function(e,n,t,a,i){this.state[e]={collection:n,size:n.length,slice:t,start:a,end:i}},e.prototype.stateIsIdentical=function(e,n,t,a){var i=this.state[e];return!!i&&(!(i.size!==n.length||i.start!==t||i.end!==a)&&i.slice.every(function(e,a){return e===n[t+a]}))},e.decorators=[{type:a.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:r}]},e}();function l(e){return!!e&&"false"!==e}var d=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new a.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=l(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:a.Input}],maxSize:[{type:a.Input}],directionLinks:[{type:a.Input}],autoHide:[{type:a.Input}],responsive:[{type:a.Input}],previousLabel:[{type:a.Input}],nextLabel:[{type:a.Input}],screenReaderPaginationLabel:[{type:a.Input}],screenReaderPageLabel:[{type:a.Input}],screenReaderCurrentLabel:[{type:a.Input}],pageChange:[{type:a.Output}]},e}(),c=function(){function e(e,n){var t=this;this.service=e,this.changeDetectorRef=n,this.maxSize=7,this.pageChange=new a.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){t.id===e&&(t.updatePageLinks(),t.changeDetectorRef.markForCheck(),t.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,n=this.service.getInstance(this.id),t=this.outOfBoundCorrection(n);t!==n.currentPage?setTimeout(function(){e.setCurrent(t),e.pages=e.createPageArray(n.currentPage,n.itemsPerPage,n.totalItems,e.maxSize)}):this.pages=this.createPageArray(n.currentPage,n.itemsPerPage,n.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var n=Math.ceil(e.totalItems/e.itemsPerPage);return n<e.currentPage&&0<n?n:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,n,t,a){a=+a;for(var i=[],r=Math.ceil(t/n),s=Math.ceil(a/2),o=e<=s,l=r-s<e,d=!o&&!l,c=a<r,p=1;p<=r&&p<=a;){var u=void 0,g=this.calculatePageNumber(p,e,a,r);u=c&&(2===p&&(d||l)||p===a-1&&(d||o))?"...":g,i.push({label:u,value:g}),p++}return i},e.prototype.calculatePageNumber=function(e,n,t,a){var i=Math.ceil(t/2);return e===t?a:1===e?e:t<a?a-i<n?a-t+e:i<n?n-i+e:e:e},e.decorators=[{type:a.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:r},{type:a.ChangeDetectorRef}]},e.propDecorators={id:[{type:a.Input}],maxSize:[{type:a.Input}],pageChange:[{type:a.Output}]},e}(),p=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule],declarations:[o,d,c],providers:[r],exports:[o,d,c]}]}],e.ctorParameters=function(){return[]},e}()}}]);