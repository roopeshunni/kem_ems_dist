(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{JTsA:function(e,t){e.exports=""},ouJv:function(e,t){e.exports='\x3c!-- Field Section --\x3e\r\n<div class="row brdcrm-mrgn">\r\n        <div class="col-md-6 col-sm-6 col-xs-8">\r\n          <div >\r\n          <div class="panel-heading mainpanel-hd text-uppercase">\r\n          \r\n          </div>\r\n          </div>\r\n         </div>\r\n         <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n          <ol class="breadcrumb">\r\n            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>\r\n            <li ><a href="#/app/exam"> Exam Management</a></li>\r\n            <li class="active">SO absentee statement</li>\r\n            </ol>\r\n        </div>\r\n</div>\r\n<section>\r\n<form #f="ngForm" (ngSubmit)="soverify(f)" id="Login">\r\n    \r\n        <div class="row margin-card">\r\n\r\n            <div class="col-md-12" id="first-content">\r\n                <div class="panel panel-primary" id="shadows">\r\n                    <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;SO Absentee statement verify\r\n                    </div>\r\n                    <div class="panel-body">\r\n                       \r\n                        \r\n                        <div class="row">\r\n                            <div class="col-md-12">\r\n                                <div class="row">\r\n                                    <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                        <label for="email" id="labels">Exam<strong style="color:red;">*</strong></label>\r\n                                        <select class="form-control input-sm" [(ngModel)]="examID"   (ngModelChange)="onChangeP($event)" required #examControl="ngModel" name="examNameID" >\r\n                                          \r\n                                        <option disabled hidden value="undefined"\r\n                                        disabled selected>----Select Exam----</option>\r\n                                        <option *ngFor="let k of examData" value="{{k.exam_id}}" >{{k.exam_name}}</option>\r\n                                        </select> \r\n                                        <span style="color:red;" class="help-block" *ngIf="examControl.invalid && examControl.touched">\r\n                                            Must choose a valid exam\r\n                                        </span>\r\n                                </div>\r\n                            </div>\r\n                             <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                        <label for="email" id="labels">Programme<strong style="color:red;">*</strong></label>\r\n                                        <select class="form-control input-sm" required #pgmControl="ngModel" (ngModelChange)="onChange1($event)" [(ngModel)]="pgmID" name="pgmID" >\r\n                                          \r\n                                        <option hidden value="undefined"\r\n                                        disabled selected>----Select Programme----</option>\r\n                                        <option *ngFor="let k of programmeData" value="{{k.program_id}}" >{{k.program_name}}</option>\r\n                                        </select> \r\n                                        <span style="color:red;" class="help-block" *ngIf="pgmControl.invalid && pgmControl.touched">\r\n                                            Must choose a valid programme\r\n                                        </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                        <label for="email" id="labels">Course<strong style="color:red;">*</strong></label>\r\n                                        <select class="form-control input-sm" type="text" [(ngModel)]="courseID" required #crsControl="ngModel" name="courseID" class="form-control input-sm" >\r\n                                        <option hidden value="undefined"\r\n                                        disabled selected>----Select Course----</option>\r\n                                        <option *ngFor="let k of courseData" value="{{k.course_id}}" >{{k.course_name}}</option>\r\n               \r\n                                        </select> \r\n                                        <span style="color:red;" class="help-block" *ngIf="crsControl.invalid && crsControl.touched">\r\n                                        please select a valid course\r\n                                        </span>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                              <div class="row">\r\n                                    \r\n                             <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                        <label for="email" id="labels">District<strong style="color:red;">*</strong></label>\r\n                                       \r\n                                        <select  type="text" [(ngModel)]="districtName" (ngModelChange)="onChange($event)" #districtControl="ngModel" required name="districtName" class="form-control input-sm">\r\n                                            <option hidden value="undefined"\r\n                                            disabled selected>----select Camp District----</option>\r\n                                            \x3c!-- <option  value="Kottayam" >Kottayam</option>\r\n                                            <option  value="Pathanamthitta" >Pathanamthitta</option>\r\n                                            <option  value="Idukki" >Idukki</option>\r\n                                            <option  value="Alappuzha" >Alappuzha</option>\r\n                                            <option  value="Ernakulam" >Ernakulam</option> --\x3e\r\n                                            <option  value="Kannur" >Kannur</option>\r\n                                            <option  value="Wayanad" >Wayanad</option>\r\n                                            <option  value="Kasaragod" >Kasaragod</option>\r\n                                         </select>\r\n                      \r\n                                         <span style="color:red;" class="help-block" *ngIf="districtControl.invalid && districtControl.touched">\r\n                                             Must choose a valid district\r\n                                         </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                        <label for="email" id="labels">Center<strong style="color:red;">*</strong></label>\r\n                                        <select class="form-control input-sm"  required #campControl="ngModel" [(ngModel)]="centerID" name="centerID" >\r\n                                          \x3c!-- (ngModelChange)="onChange1($event)"  --\x3e\r\n                                        <option hidden value="undefined"\r\n                                        disabled selected>----Select Evaluation Center----</option>\r\n                                        <option *ngFor="let k of centerData" value="{{k.center_id}}" >{{k.center_name}}</option>\r\n                                        </select> \r\n                                        <span style="color:red;" class="help-block" *ngIf="campControl.invalid && campControl.touched">\r\n                                          Must choose a valid evaluation camp\r\n                                      </span>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    \r\n                      \r\n                       \r\n\r\n                    </div>\r\n                    <div class="panel-footer panel-default text-right">\r\n                        <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;Find</button>\r\n                    </div>\r\n                    <div *ngIf="errMsg" class="red-text center error-message"\r\n                    style="text-align: center;font-size: 15px;color:red;">\r\n                    Please fill the required fields\r\n                  </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n</section>\r\n\r\n<section>\r\n        <div class="row">\r\n            <div class="col-md-12" id="first-content">\r\n                <div *ngIf="noexamflag==false" class="panel panel-primary" id="shadows">\r\n                    <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Absentees statement\r\n                    </div>\r\n                    <div class="panel-body" id="table-contents">\r\n\r\n                        <div class="row">\r\n\r\n                            <div id="no-more-tables">\r\n\r\n                                <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                                    <thead class="cf">\r\n                                        <tr>\r\n                                            \x3c!-- <th>No</th> --\x3e\r\n                                            <th>Name</th>\r\n                                            <th>Register number</th>\r\n                                            \x3c!-- <th>Status</th> --\x3e\r\n                                            <th>SMP</th>\r\n                                           \r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody >\r\n                                        \x3c!-- <tr *ngFor="let i of absentData; let j=index">\r\n                                            <td data-title="No">{{j+1}}</td>\r\n                                            <td data-title="Register number">{{i.reg_no}}</td>\r\n                                            <td data-title="Name">{{i.so_name}}</td>\r\n                                            <td data-title="Status">{{i.reg_no}}</td>\r\n                                            <td data-title="SMP">{{i.so_name}}</td> --\x3e\r\n                                            \x3c!-- <td data-title="Degree edit"><a (click)="EditDegree(i.deg_id)" style="cursor:pointer"><i class="fa fa-pencil"></i></a>\r\n                                           <td data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                                              mwlConfirmationPopover\r\n                                              [popoverTitle]="popoverTitle"\r\n                                              [popoverMessage]="popoverMessage"\r\n                                              placement="top"\r\n                                              (confirm)="DeleteDegree(i.deg_id)"\r\n                                              (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td> --\x3e\r\n                                          \r\n                                        \x3c!-- </tr> --\x3e\r\n                                        <tr *ngFor="let item of presentData; let j=index " >\r\n                                                \x3c!-- <td *ngIf="item.smp_status==true" data-title="No" style="color:red;">{{j+1}}</td>\r\n                                                <td *ngIf="item.smp_status==false" data-title="No">{{j+1}}</td> --\x3e\r\n\r\n                                                <td *ngIf="item.smp_status==true" data-title="Name" style="color:red;">{{item.student_name}}</td>\r\n                                                <td  *ngIf="item.smp_status==false" data-title="Name">{{item.student_name}}</td>\r\n\r\n                                                <td *ngIf="item.smp_status==true" data-title="Register number" style="color:red;">{{item.student_reg}}</td>\r\n                                                <td *ngIf="item.smp_status==false" data-title="Register number">{{item.student_reg}}</td>\r\n\r\n                                                <div *ngIf="item.smp_status==true" >\r\n                                                <td  data-title="SMP" style="color:red;">SMP</td>\r\n                                                </div>\r\n                                                <div *ngIf="item.smp_status==false" >\r\n                                                    <td  data-title="SMP">-</td>\r\n                                                </div>\r\n                                        </tr>\r\n                                         <tr  *ngFor="let items of absentData; let k=index">\r\n                                                \x3c!-- <td  data-title="No">{{k+1}}</td> --\x3e\r\n                                                <td  data-title="Name">{{items.student_name}}</td>\r\n                                                <td  data-title=" Register number">{{items.student_reg}}</td>\r\n                                                <td data-title="SMP">*</td>\r\n\r\n                                        </tr>\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \x3c!-- <div class="panel-footer panel-default">\r\n                         <div class="checkbox">\r\n                           <label id="declaration"><input type="checkbox" value="">I hereby declare that the above submitted details are true.</label>\r\n                           <button type="submit" class="btn btn-primary btn-sm pull-right"><i class="fa fa-check"></i>&nbsp;Verify</button><div class="clearfix"></div>\r\n                        </div>\r\n                    </div> --\x3e\r\n                    <div class="panel-footer panel-default">\r\n                    \x3c!-- <form #m="ngForm" (ngSubmit)="submitAbsenteeList(m)"> --\x3e\r\n      \r\n                            <div class="checkbox">\r\n                              <label id="declaration"><input type="checkbox" name="checked" [(ngModel)]="checked"\r\n                                  #checkedControl="ngModel" \r\n                                   required (change)="onSelect($event)">I hereby declare that the\r\n                                above submitted details\r\n                                are true.</label>\r\n                                \x3c!-- <span style="color:red;" *ngIf="checkedControl.errors?.required && checkedControl.touched">\r\n                                    This field  is required\r\n                                  </span> --\x3e\r\n                             \r\n                             \r\n                              <button [disabled]="disablebtn" (click)=submitAbsenteeList() type="submit" class="btn btn-primary btn-sm pull-right"><i\r\n                                  class="fa fa-rocket" ></i>&nbsp;Approve</button>\r\n                              <div class="clearfix"></div>\r\n                            </div>\r\n                \r\n                    \x3c!-- </form> --\x3e\r\n                    </div>\r\n\r\n                </div>\r\n                <div *ngIf="noexamflag==true" class="panel panel-primary" id="shadows">\r\n                        <h4 style="text-align: center" >{{messagenew}} </h4>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n</section>'},zHlV:function(e,t,n){"use strict";n.r(t);var s=n("mrSG"),r=n("CcnG"),a=n("qmRI"),i=function(){function e(e){this.ems=e,this.popoverTitle="Delete User",this.popoverMessage="Are you sure to delete",this.confirmClicked=!1,this.cancelClicked=!1,this.absentData=[],this.programmeData=[],this.centerData=[],this.centerData1=[],this.examData=[],this.errMsg=!1,this.courseData=[],this.presentData=[],this.disablebtn=!0,this.noexamflag=!1,this.ems.active=4}return e.prototype.ngOnInit=function(){var e=this;this.sessionid=localStorage.getItem("sessionid"),this.uid=localStorage.getItem("uid"),this.ems.getExamCente(this.sessionid,this.uid).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.centerData1=t.data}),this.ems.pastExam(this.sessionid,this.uid).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.examData=t.data})},e.prototype.onChangeP=function(e){var t=this;this.examID=e,this.courseData=[],this.centerData=[],this.centerID="",this.courseID="",this.ems.getprglist(e,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.programmeData=e.data}),this.ems.examSpecificCenter(this.sessionid,this.uid,e).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.centerData=e.data})},e.prototype.onChange1=function(e){var t=this;this.programmeID=e,this.courseData=[],this.ems.getcourselist(e,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.courseData=e.data})},e.prototype.onSelect=function(e){e.target.checked?this.disablebtn=!1:this.disablebtn=!0},e.prototype.soverify=function(e){var t=this;e.invalid?this.errMsg=!0:(this.errMsg=!1,this.absentData=[],this.errMsg=!1,$("html, body").animate({scrollTop:0}),this.ems.sogenerateAPI(this.examID,this.centerID,this.courseID,this.programmeID,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.ems.status=e.status,"Success"==e.status?(t.ems.msg=e.message,$("#myModal").modal("show"),t.exam=t.examID,t.cen=t.centerID,t.course=t.courseID,t.presentData=e.data[0].present_list,t.absentData=e.data[1].absentee_list,t.errMsg=!1,t.noexamflag=!1):(0==e.data.length&&(t.noexamflag=!0,t.messagenew=e.message),"Bad request"==e.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):"Ivalid id"==e.message||(t.ems.msg=e.message,$("#myModal").modal("show")))}))},e.prototype.submitAbsenteeList=function(){var e=this;$("html, body").animate({scrollTop:0}),this.ems.soverifyAPI(+this.exam,+this.cen,+this.course,this.sessionid,+this.uid).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.ems.status=t.status,"Success"==t.status?(e.ems.msg=t.message,$("#myModal").modal("show"),e.absentData=t.data,e.presentData=[],e.absentData=[],e.checked=!1,e.disablebtn=!0,document.getElementById("Login").reset()):"Bad request"==t.message?(e.ems.msg="Internal Server Error",$("#myModal").modal("show")):(e.ems.msg=t.message,$("#myModal").modal("show"))})},e=s.b([Object(r.Component)({selector:"app-so-absentee-statement-verify",template:n("ouJv"),styles:[n("JTsA")]}),s.d("design:paramtypes",[a.a])],e)}(),o=n("Zseb"),l=n("Ip0R"),d=n("ZYCi"),c=n("gIcY");n.d(t,"routes",function(){return m}),n.d(t,"SoAbsenteeStatementVerifyModule",function(){return u});var m=[{path:"",component:i,pathMatch:"full"}],u=function(){function e(){}return e.routes=m,e=s.b([Object(r.NgModule)({imports:[l.CommonModule,d.RouterModule.forChild(m),c.FormsModule,o.a],declarations:[i],providers:[],bootstrap:[i]})],e)}()}}]);