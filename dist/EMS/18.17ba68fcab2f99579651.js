(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"0AmQ":function(e,t){e.exports='\x3c!-- <div id="preloader-status"></div> --\x3e\r\n\r\n\x3c!-- <div class="row brdcrm-mrgn">\r\n      <div class="col-md-6 col-sm-6 col-xs-8">\r\n        <div >\r\n        <div class="panel-heading mainpanel-hd text-uppercase">\r\n        </div>\r\n        </div>\r\n       </div>\r\n       <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n        <ol class="breadcrumb">\r\n          <li><a href="#/app/dashboard"><i class="fa fa-dashboard"></i> Home</a></li>\r\n          <li><a href="#/app/preExam">Pre Examination Management</a>\r\n            </li>\r\n            <li class="active">Invigilator Add</li>\r\n          </ol>\r\n       </div>\r\n     </div> --\x3e\r\n\r\n<section>\r\n   \r\n       <div class="row">\r\n          <div class="col-md-12" id="first-content">\r\n             <div class="panel panel-primary" id="shadows">\r\n                <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Enter details\r\n                </div>\r\n                <div class="panel-body">\r\n                   <div class="row">\r\n                      <div class="col-md-12">\r\n                         <div class="form-group">\r\n                            <label for="email" id="labels">Exam </label>\r\n                            <select class="form-control input-sm" (change)="examDetails($event.target.value)" [(ngModel)]="eid" name="eid">\r\n                                 <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                               <option *ngFor="let exam of examdetails"  value="{{exam.exam_id}}">{{exam.exam_name}}</option>\r\n                               \x3c!-- <option>#</option>\r\n                               <option>#</option>\r\n                               <option>#</option> --\x3e\r\n                              \r\n                            </select>\r\n                            <div  *ngIf="isExam" class="red-text center error-message" style="font-size: 15px;color:red;">\r\n                              Please Select Exam\r\n                              </div>\r\n                         </div>\r\n                      </div>\r\n                     \r\n                   </div>\r\n                </div>\r\n                \r\n                \x3c!--  <div class="panel-footer">refg\r\n                   </div> --\x3e\r\n             </div>\r\n          </div>\r\n       </div>\r\n\r\n\r\n </section>\r\n \x3c!-- panels section --\x3e\r\n <section>\r\n    <br>\r\n \r\n       <div class="row">\r\n          <div class="col-md-6">\r\n             <div class="panel panel-primary" id="shadows">\r\n                <div class="panel-heading" id="head-title">\r\n                   <i class="fa fa-info-circle"></i>&nbsp;Teachers list\r\n                </div>\r\n                <div class="panel-body">\r\n                   <div class="row inv-hgt">\r\n                      <div class="col-md-12">\r\n                         <ul class="list-group">\r\n                            <li class="list-group-item"> <input  [(ngModel)]="masterSelected" name="list_name" value="m1" (change)="checkUncheckAll()" type="checkbox" >&nbsp; <span class="label-text" id="select_all">Select all</span></li>\r\n                            <li *ngFor="let teacher of teacherlist  | paginate: {id:\'page1\', itemsPerPage: 5, currentPage: p };"  class="list-group-item"> \r\n                               <input type="checkbox"  [(ngModel)]="teacher.isSelected" name="list_name"  (change)="isAllSelected()"  value="{{teacher.teacher_id}}" >&nbsp;\r\n                                <span class="label-text">{{teacher.teacher_name}}</span>\r\n                           </li>\r\n                         \r\n\r\n                         \r\n                 \r\n                           \r\n                            \x3c!-- <li class="list-group-item"> <input type="checkbox" name="check" > <span class="label-text">Roopesh</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" > <span class="label-text">Sahad</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" > <span class="label-text">Beemon</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" > <span class="label-text">Leena</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" > <span class="label-text">Anjali</span></li> --\x3e\r\n                         </ul>\r\n\r\n                         <pagination-controls style="text-align:center;"  id="page1" (pageChange)="p = $event" ></pagination-controls>\r\n                         <div  *ngIf="isTeacher" class="red-text center error-message" style="font-size: 15px;color:red;">\r\n                           Please Select atleast one teacher\r\n                           </div>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n                <div class="panel-footer text-right">\r\n                </div>\r\n             </div>\r\n          </div>\r\n          \x3c!--  <div class="col-md-1">\r\n          <button class="btn btn-default btn-block" id="list-btn"><i class="fa fa-arrow-right" aria-hidden="true"></i></button><br>\r\n\r\n          </div> --\x3e\r\n          <div class="col-md-6">\r\n             <div class="panel panel-primary " id="shadows">\r\n                <div class="panel-heading" id="head-title">\r\n                   <i class="fa fa-info-circle"></i>&nbsp;Selected Teachers Details\r\n                </div>\r\n                <div class="panel-body">\r\n                   <div class="row inv-hgt">\r\n                      <div class="col-md-12 ">\r\n                        <ul class="list-group">\r\n                          <li class="list-group-item"  > <input type="checkbox" name="check" id="checklists"> <span class="label-text" ><b><i class="fa fa-list"></i>&nbsp;Lists</b></span></li>\r\n                            <li *ngFor="let list of selectList | paginate: {id:\'page3\', itemsPerPage: 5, currentPage: k };" class="list-group-item"> <input type="checkbox" name="check" id="checklists"> <span class="label-text">{{list.teacher_name}}</span></li>\r\n                            \x3c!-- <li class="list-group-item"> <input type="checkbox" name="check" id="checklists"> <span class="label-text">Roopesh</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" id="checklists"> <span class="label-text">Sahad</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" id="checklists"> <span class="label-text">Beemon</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" id="checklists"> <span class="label-text">Leena</span></li>\r\n                            <li class="list-group-item"> <input type="checkbox" name="check" id="checklists"> <span class="label-text">Anjali</span></li> --\x3e\r\n                         </ul>\r\n                         \r\n                      </div>\r\n                      <pagination-controls style="text-align:center;"  id="page3" (pageChange)="k = $event" ></pagination-controls>\r\n                   </div>\r\n                </div>\r\n                <div class="panel-footer text-right">\r\n                </div>\r\n             </div>\r\n          </div>\r\n       </div>\r\n  \r\n </section>\r\n <div class="text-right">\r\n   <button type="submit" (click)="addInvigilator()" class="btn btn-primary btn-sm"><i class="fa fa-rocket"></i>&nbsp;Submit</button>\r\n</div>\r\n\r\n<section>\r\n   \r\n       <div class="row">\r\n           <div class="col-md-12 col-md-12 col-sm-12" id="first-content">\r\n               <div class="panel panel-primary" id="shadows">\r\n                   <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Invigilator Lists\r\n                   </div>\r\n                   <div class="panel-body" id="table-contents">\r\n\r\n                       <div class="row">\r\n\r\n                           <div id="no-more-tables">\r\n\r\n                               <table class="col-md-12 table-bordered table-striped table-condensed cf">\r\n                                   <thead class="cf">\r\n                                       <tr>\r\n                                           <th>Sl.No</th>\r\n                                           <th>Invigilator Name</th>\r\n                                           <th>Employee ID</th>\r\n                                           <th>Exam Name</th>\r\n                                           <th>Delete</th>\r\n                                          \r\n\r\n                                       </tr>\r\n                                   </thead>\r\n                                   <tbody>\r\n                                       <tr *ngFor="let invig of invig_details| paginate: { id:\'page2\', itemsPerPage: 5, currentPage: q }; let i=index">\r\n                                           <td data-title="Sl.No">{{(5*(q-1))+i+1}}</td>\r\n                                           <td data-title="Invigilator Name">{{invig.invigilator_name}}</td>\r\n                                           <td data-title="Employee ID">{{invig.emp_id}}</td>\r\n                                           <td data-title="Exam Name">{{invig.exam_name}}</td>\r\n                                           <td data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                                             mwlConfirmationPopover\r\n                                             [popoverTitle]="popoverTitle"\r\n                                             [popoverMessage]="popoverMessage"\r\n                                             placement="left"\r\n                                             (confirm)="DeleteInvig(invig.user_id,invig.exam_id)"\r\n                                             (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td>\r\n                                          \r\n\r\n                                       </tr>\r\n\r\n                                   </tbody>\r\n                               </table>\r\n                               <pagination-controls style="text-align:center;" id="page2" (pageChange)="q = $event" ></pagination-controls>\r\n                           </div>\r\n                       </div>\r\n\r\n                   </div>\r\n                   <div class="panel-footer panel-default text-right">\r\n\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n       </div>\r\n  \r\n\r\n</section>'},"1ktr":function(e,t,n){"use strict";n.r(t);var i=n("mrSG"),s=n("CcnG"),a=n("qmRI"),r=function(){function e(e){var t=this;this.ems=e,this.p=1,this.q=1,this.k=1,this.teacherlist=[],this.selectList=[],this.isExam=!1,this.isTeacher=!1,this.invi_list=[],this.popoverTitle="Delete Invigilator",this.popoverMessage="Are you sure to delete",this.confirmClicked=!1,this.cancelClicked=!1,this.ems.login("leona@yopmail.com","Test@123").subscribe(function(e){"Success"==e.status&&(localStorage.setItem("sessionid",e.data.session_token),localStorage.setItem("uid",e.data.user_id),localStorage.setItem("role",e.data.role_name),localStorage.setItem("cen_id",e.data.cen_id),localStorage.setItem("username",e.data.user_name),localStorage.setItem("permission",e.data.action_list),t.sessionid=localStorage.getItem("sessionid"),t.uid=localStorage.getItem("uid"),t.cen_id=localStorage.getItem("cen_id"),t.getinvigdetails())}),this.ems.active=2}return e.prototype.ngOnInit=function(){},e.prototype.examDetails=function(e){this.eid=e,this.isExam=!1},e.prototype.getCheckedItemList=function(){this.selectList=[];for(var e=0;e<this.teacherlist.length;e++)this.teacherlist[e].isSelected&&this.selectList.push(this.teacherlist[e])},e.prototype.checkUncheckAll=function(){for(var e=0;e<this.teacherlist.length;e++)this.teacherlist[e].isSelected=this.masterSelected;this.isTeacher=!1,this.getCheckedItemList()},e.prototype.isAllSelected=function(){this.masterSelected=this.teacherlist.every(function(e){return 1==e.isSelected}),this.isTeacher=!1,this.getCheckedItemList()},e.prototype.addInvigilator=function(){var e=this;if(this.invi_list=[],null==this.eid?this.isExam=!0:this.isExam=!1,0==this.selectList.length)this.isTeacher=!0;else{for(var t=0,n=this.selectList;t<n.length;t++){var i=n[t];this.invi_list.push(i.teacher_id)}this.isTeacher=!1}this.isExam||this.isTeacher||this.ems.addInvigilator(this.cen_id,this.sessionid,this.uid,this.eid,this.invi_list).subscribe(function(t){e.ems.status=t.status,"Success"==t.status?(e.getinvigdetails(),e.ems.msg=t.message,$("#myModal").modal("show"),e.selectList=[],e.eid=null,e.masterSelected=null):("Unauthorised access"==t.message&&e.ems.sessionlogout(),"Bad request"==t.message?(e.ems.msg="Internal Server Error",$("#myModal").modal("show")):(e.ems.msg=t.message,$("#myModal").modal("show")))})},e.prototype.getinvigdetails=function(){var e=this;this.ems.getInvigilator(this.cen_id,this.sessionid,this.uid).subscribe(function(t){e.invig_details=t.data,"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.ems.centerSpecificExam(e.sessionid,e.uid,e.cen_id).subscribe(function(t){e.examdetails=t.data,"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.ems.getTeacher(e.cen_id,e.sessionid,e.uid).subscribe(function(t){if("Unauthorised access"==t.message&&e.ems.sessionlogout(),e.teacherlist1=[],e.teacherlist1=t.data,t){e.teacherlist=[];for(var n=0,i=e.teacherlist1;n<i.length;n++){var s=i[n];e.teacherlist.push({teacher_id:s.teacher_id,teacher_name:s.teacher_name,isSelected:!1})}}})})})},e.prototype.DeleteInvig=function(e,t){var n=this;this.ems.deleteInvigilator(this.cen_id,this.sessionid,this.uid,t,e).subscribe(function(e){n.ems.status=e.status,"Success"==e.status?($("html, body").animate({scrollTop:0}),n.getinvigdetails(),n.ems.msg=e.message,$("#myModal").modal("show")):("Unauthorised access"==e.message&&n.ems.sessionlogout(),"Bad request"==e.message?(n.ems.msg="Internal Server Error",$("#myModal").modal("show")):(n.ems.msg=e.message,$("#myModal").modal("show")))})},e=i.b([Object(s.Component)({selector:"app-addinvigilator",template:n("0AmQ"),styles:[n("uRpU")]}),i.d("design:paramtypes",[a.a])],e)}(),o=n("Zseb"),l=n("Ip0R"),c=n("ZYCi"),p=n("gIcY"),d=n("xkgV"),g=n("fCu2");n.d(t,"routes",function(){return u}),n.d(t,"AddinvigilatorModule",function(){return h});var u=[{path:"",component:r,pathMatch:"full"}],h=function(){function e(){}return e.routes=u,e=i.b([Object(s.NgModule)({imports:[l.CommonModule,c.RouterModule.forChild(u),p.FormsModule,o.a,d.a,g.a.forRoot({confirmButtonType:"danger"})],declarations:[r],providers:[],bootstrap:[r]})],e)}()},uRpU:function(e,t){e.exports=""},xkgV:function(e,t,n){"use strict";n.d(t,"a",function(){return d});var i=n("CcnG"),s=n("Ip0R"),a=function(){function e(){this.change=new i.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var t=!1;for(var n in this.instances[e.id])e[n]!==this.instances[e.id][n]&&(this.instances[e.id][n]=e[n],t=!0);return t},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,t){if(this.instances[e]){var n=this.instances[e];t<=Math.ceil(n.totalItems/n.itemsPerPage)&&1<=t&&(this.instances[e].currentPage=t,this.change.emit(e))}},e.prototype.setTotalItems=function(e,t){this.instances[e]&&0<=t&&(this.instances[e].totalItems=t,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,t){this.instances[e]&&(this.instances[e].itemsPerPage=t,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},e}(),r=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,t){if(t instanceof Array&&(t=t[0]),!(e instanceof Array)){var n=t.id||this.service.defaultId;return this.state[n]?this.state[n].slice:e}var i,s,a=t.totalItems&&t.totalItems!==e.length,o=this.createInstance(e,t),l=o.id,c=o.itemsPerPage;if(this.service.register(o),!a&&e instanceof Array){if(c=+c||r,s=(i=(o.currentPage-1)*c)+c,this.stateIsIdentical(l,e,i,s))return this.state[l].slice;var p=e.slice(i,s);return this.saveState(l,e,p,i,s),this.service.change.emit(l),p}return this.saveState(l,e,e,i,s),e},e.prototype.createInstance=function(e,t){var n=t;return this.checkConfig(n),{id:null!=n.id?n.id:this.service.defaultId(),itemsPerPage:+n.itemsPerPage||0,currentPage:+n.currentPage||1,totalItems:+n.totalItems||e.length}},e.prototype.checkConfig=function(e){var t=["itemsPerPage","currentPage"].filter(function(t){return!(t in e)});if(0<t.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+t.join(", "))},e.prototype.saveState=function(e,t,n,i,s){this.state[e]={collection:t,size:t.length,slice:n,start:i,end:s}},e.prototype.stateIsIdentical=function(e,t,n,i){var s=this.state[e];return!!s&&(!(s.size!==t.length||s.start!==n||s.end!==i)&&s.slice.every(function(e,i){return e===t[n+i]}))},e.decorators=[{type:i.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:a}]},e}();function l(e){return!!e&&"false"!==e}var c=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new i.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=l(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:i.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:i.ChangeDetectionStrategy.OnPush,encapsulation:i.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:i.Input}],maxSize:[{type:i.Input}],directionLinks:[{type:i.Input}],autoHide:[{type:i.Input}],responsive:[{type:i.Input}],previousLabel:[{type:i.Input}],nextLabel:[{type:i.Input}],screenReaderPaginationLabel:[{type:i.Input}],screenReaderPageLabel:[{type:i.Input}],screenReaderCurrentLabel:[{type:i.Input}],pageChange:[{type:i.Output}]},e}(),p=function(){function e(e,t){var n=this;this.service=e,this.changeDetectorRef=t,this.maxSize=7,this.pageChange=new i.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){n.id===e&&(n.updatePageLinks(),n.changeDetectorRef.markForCheck(),n.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,t=this.service.getInstance(this.id),n=this.outOfBoundCorrection(t);n!==t.currentPage?setTimeout(function(){e.setCurrent(n),e.pages=e.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,e.maxSize)}):this.pages=this.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,t,n,i){i=+i;for(var s=[],a=Math.ceil(n/t),r=Math.ceil(i/2),o=e<=r,l=a-r<e,c=!o&&!l,p=i<a,d=1;d<=a&&d<=i;){var g=void 0,u=this.calculatePageNumber(d,e,i,a);g=p&&(2===d&&(c||l)||d===i-1&&(c||o))?"...":u,s.push({label:g,value:u}),d++}return s},e.prototype.calculatePageNumber=function(e,t,n,i){var s=Math.ceil(n/2);return e===n?i:1===e?e:n<i?i-s<t?i-n+e:s<t?t-s+e:e:e},e.decorators=[{type:i.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:a},{type:i.ChangeDetectorRef}]},e.propDecorators={id:[{type:i.Input}],maxSize:[{type:i.Input}],pageChange:[{type:i.Output}]},e}(),d=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[s.CommonModule],declarations:[o,c,p],providers:[a],exports:[o,c,p]}]}],e.ctorParameters=function(){return[]},e}()}}]);