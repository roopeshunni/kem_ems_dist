(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{AK57:function(e,t,n){"use strict";n.r(t);var a=n("mrSG"),i=n("CcnG"),r=n("qmRI"),s=function(){function e(e){this.ems=e,this.p=1,this.roomData=[],this.stuData=[],this.hallNo="",this.errMsg=!1,this.noexamflag=!1,this.messagenew="no student alloted yet",this.ems.active=2}return e.prototype.ngOnInit=function(){var e=this;$("html, body").animate({scrollTop:0}),this.sessionid=localStorage.getItem("sessionid"),this.uid=localStorage.getItem("uid"),this.cen_id=localStorage.getItem("cen_id"),this.hallNo=localStorage.getItem("hallNo"),this.ems.getExamHall(this.sessionid,this.uid,this.cen_id).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.roomData=t.data}),this.ems.stud_listAPI(this.cen_id,this.hallNo,this.sessionid,this.uid).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),e.ems.status=t.status,"Success"==t.status?(e.ems.msg=t.message,e.stuData=t.data,e.errMsg=!1):(0==t.data.length&&(e.noexamflag=!0,e.messagenew=t.message),"Bad request"==t.message?(e.ems.msg="Internal Server Error",$("#myModal").modal("show")):"Ivalid id"==t.message||(e.ems.msg=t.message,$("#myModal").modal("show")))})},e=a.b([Object(i.Component)({selector:"app-studentallot",template:n("HmyX"),styles:[n("AuZS")]}),a.d("design:paramtypes",[r.a])],e)}(),o=n("xkgV"),l=n("Zseb"),c=n("Ip0R"),p=n("ZYCi"),d=n("gIcY");n.d(t,"routes",function(){return g}),n.d(t,"StudentallotingModule",function(){return u});var g=[{path:"",component:s,pathMatch:"full"}],u=function(){function e(){}return e.routes=g,e=a.b([Object(i.NgModule)({imports:[c.CommonModule,p.RouterModule.forChild(g),d.FormsModule,l.a,o.a],declarations:[s],providers:[],bootstrap:[s]})],e)}()},AuZS:function(e,t){e.exports=""},HmyX:function(e,t){e.exports='\x3c!-- Field Section --\x3e\r\n<div class="row brdcrm-mrgn">\r\n    <div class="col-md-6 col-sm-6 col-xs-8">\r\n      <div >\r\n      <div class="panel-heading mainpanel-hd text-uppercase">\r\n      \r\n      </div>\r\n      </div>\r\n     </div>\r\n     <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n      <ol class="breadcrumb">\r\n        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>\r\n        <li ><a href="#/app/preExam">Pre Exam Management</a></li>\r\n        <li class="active">Allotted student list </li>\r\n        </ol>\r\n    </div>\r\n</div>\r\n\x3c!-- <section>\r\n<form #f="ngForm" (ngSubmit)="stu_list(f)" id="Login">\r\n\r\n    <div class="row margin-card">\r\n\r\n        <div class="col-md-12" id="first-content">\r\n            <div class="panel panel-primary" id="shadows">\r\n                <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Allotted student list\r\n                </div>\r\n                <div class="panel-body">\r\n                   \r\n                    \r\n                    <div class="row">\r\n                        <div class="col-md-12">\r\n\r\n                        <div class="row">\r\n                                \r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                        <label for="email" id="labels">Hall :<strong style="color:red;">*</strong></label>\r\n                                      \r\n                                        <select  type="text" [(ngModel)]="hallName"  #districtControl="ngModel" required name="hallName"  class="form-control input-sm">\r\n                                          \r\n                                            <option  disabled selected value="undefined" >----Select Exam Hall-------- </option>\r\n                                            <option *ngFor="let exam of roomData" value="{{exam.room_id}}">{{exam.room_no}}</option>\r\n                                        </select>\r\n                      \r\n                                        <span style="color:red;" class="help-block" *ngIf="districtControl.invalid && districtControl.touched">\r\n                                            Must choose a valid room\r\n                                        </span>\r\n                                </div>\r\n                            </div>\r\n                           \r\n\r\n                        </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                \r\n                  \r\n                   \r\n\r\n                </div>\r\n                <div class="panel-footer panel-default text-right">\r\n                    <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;Find</button>\r\n                </div>\r\n                <div *ngIf="errMsg" class="red-text center error-message"\r\n                style="text-align: center;font-size: 15px;color:red;">\r\n                Please fill the required fields\r\n              </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n</section> --\x3e\r\n<section>\r\n    <div class="row">\r\n        <div class="col-md-12" id="first-content">\r\n            <div *ngIf="noexamflag==false" class="panel panel-primary" id="shadows">\r\n                <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Student list statement\r\n                </div>\r\n                <div class="panel-body" id="table-contents">\r\n\r\n                    <div class="row">\r\n\r\n                        <div id="no-more-tables">\r\n\r\n                            <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                                <thead class="cf">\r\n                                    <tr>\r\n                                        <th>SL No.</th>\r\n                                        <th>Hall No</th>\r\n                                        <th>Register number</th>\r\n\r\n                                        <th>Student Name</th>\r\n                                        <th>Exam name</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody >\r\n\r\n                                    <tr *ngFor="let item of stuData | paginate: { itemsPerPage: 10, currentPage: p };let j=index;" >\r\n                                        <td data-title="No">{{(10*(p-1))+j+1}}</td>\r\n                                        <td  data-title="Hall No">{{item.exam_hall_number}}</td>\r\n                                        <td  data-title="Register number">{{item.student_reg}}</td>\r\n \r\n                                            <td  data-title="Student Name">{{item.student_name}}</td>\r\n                                            \x3c!-- <td  data-title="Student Id">{{item.student_id}}</td> --\x3e\r\n                                            <td  data-title="Exam name">{{item.exam_name}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <pagination-controls style="text-align:center;" (pageChange)="p = $event" >\r\n                              </pagination-controls>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf="noexamflag==true" class="panel panel-primary" id="shadows">\r\n                    <h4 style="text-align: center" >{{messagenew}} </h4>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>'},xkgV:function(e,t,n){"use strict";n.d(t,"a",function(){return d});var a=n("CcnG"),i=n("Ip0R"),r=function(){function e(){this.change=new a.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var t=!1;for(var n in this.instances[e.id])e[n]!==this.instances[e.id][n]&&(this.instances[e.id][n]=e[n],t=!0);return t},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,t){if(this.instances[e]){var n=this.instances[e];t<=Math.ceil(n.totalItems/n.itemsPerPage)&&1<=t&&(this.instances[e].currentPage=t,this.change.emit(e))}},e.prototype.setTotalItems=function(e,t){this.instances[e]&&0<=t&&(this.instances[e].totalItems=t,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,t){this.instances[e]&&(this.instances[e].itemsPerPage=t,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},e}(),s=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,t){if(t instanceof Array&&(t=t[0]),!(e instanceof Array)){var n=t.id||this.service.defaultId;return this.state[n]?this.state[n].slice:e}var a,i,r=t.totalItems&&t.totalItems!==e.length,o=this.createInstance(e,t),l=o.id,c=o.itemsPerPage;if(this.service.register(o),!r&&e instanceof Array){if(c=+c||s,i=(a=(o.currentPage-1)*c)+c,this.stateIsIdentical(l,e,a,i))return this.state[l].slice;var p=e.slice(a,i);return this.saveState(l,e,p,a,i),this.service.change.emit(l),p}return this.saveState(l,e,e,a,i),e},e.prototype.createInstance=function(e,t){var n=t;return this.checkConfig(n),{id:null!=n.id?n.id:this.service.defaultId(),itemsPerPage:+n.itemsPerPage||0,currentPage:+n.currentPage||1,totalItems:+n.totalItems||e.length}},e.prototype.checkConfig=function(e){var t=["itemsPerPage","currentPage"].filter(function(t){return!(t in e)});if(0<t.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+t.join(", "))},e.prototype.saveState=function(e,t,n,a,i){this.state[e]={collection:t,size:t.length,slice:n,start:a,end:i}},e.prototype.stateIsIdentical=function(e,t,n,a){var i=this.state[e];return!!i&&(!(i.size!==t.length||i.start!==n||i.end!==a)&&i.slice.every(function(e,a){return e===t[n+a]}))},e.decorators=[{type:a.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:r}]},e}();function l(e){return!!e&&"false"!==e}var c=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new a.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=l(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:a.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:a.Input}],maxSize:[{type:a.Input}],directionLinks:[{type:a.Input}],autoHide:[{type:a.Input}],responsive:[{type:a.Input}],previousLabel:[{type:a.Input}],nextLabel:[{type:a.Input}],screenReaderPaginationLabel:[{type:a.Input}],screenReaderPageLabel:[{type:a.Input}],screenReaderCurrentLabel:[{type:a.Input}],pageChange:[{type:a.Output}]},e}(),p=function(){function e(e,t){var n=this;this.service=e,this.changeDetectorRef=t,this.maxSize=7,this.pageChange=new a.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){n.id===e&&(n.updatePageLinks(),n.changeDetectorRef.markForCheck(),n.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,t=this.service.getInstance(this.id),n=this.outOfBoundCorrection(t);n!==t.currentPage?setTimeout(function(){e.setCurrent(n),e.pages=e.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,e.maxSize)}):this.pages=this.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,t,n,a){a=+a;for(var i=[],r=Math.ceil(n/t),s=Math.ceil(a/2),o=e<=s,l=r-s<e,c=!o&&!l,p=a<r,d=1;d<=r&&d<=a;){var g=void 0,u=this.calculatePageNumber(d,e,a,r);g=p&&(2===d&&(c||l)||d===a-1&&(c||o))?"...":u,i.push({label:g,value:u}),d++}return i},e.prototype.calculatePageNumber=function(e,t,n,a){var i=Math.ceil(n/2);return e===n?a:1===e?e:n<a?a-i<t?a-n+e:i<t?t-i+e:e:e},e.decorators=[{type:a.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:r},{type:a.ChangeDetectorRef}]},e.propDecorators={id:[{type:a.Input}],maxSize:[{type:a.Input}],pageChange:[{type:a.Output}]},e}(),d=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule],declarations:[o,c,p],providers:[r],exports:[o,c,p]}]}],e.ctorParameters=function(){return[]},e}()}}]);