(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"6l6T":function(e,t,n){"use strict";n.r(t);var r=n("mrSG"),s=n("CcnG"),a=n("qmRI"),i=function(){function e(e){this.ems=e,this.isupdate=!1,this.isadd=!1,this.isdelete=!1,this.errMsg=!1,this.index=1,this.degreeData=[],this.isedit=!1,this.p=1,this.popoverTitle="Delete Degree",this.popoverMessage="Are you sure to delete",this.confirmClicked=!1,this.cancelClicked=!1,this.ems.active=2}return e.prototype.ngOnInit=function(){var e=this;this.sessionid=localStorage.getItem("sessionid"),this.uid=localStorage.getItem("uid"),this.ems.getDegree(this.sessionid,this.uid).subscribe(function(t){"Unauthorised access"==t.message&&e.ems.sessionlogout(),"Success"==t.status&&(e.degreeData=t.data)})},e.prototype.EditDegree=function(e){var t=this;this.degreeId=e,this.ems.singleDegree(e,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),"Success"==e.status&&(t.degreeName=e.data.name,t.degreeCode=e.data.degcode,t.isedit=!0)}),$("html, body").animate({scrollTop:0})},e.prototype.DeleteDegree=function(e){var t=this;this.degreeId=e,this.ems.deleteDegrees(e,this.sessionid,this.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),t.ems.status=e.status,"Success"==e.status?(t.ems.msg=e.message,$("#myModal").modal("show"),t.degreeName="",t.degreeCode="",setTimeout((function(){}).bind(t),3e3),t.ems.getDegree(t.sessionid,t.uid).subscribe(function(e){"Unauthorised access"==e.message&&t.ems.sessionlogout(),"Success"==e.status&&(t.degreeData=e.data)})):(0==e.data.length&&(t.nullMessage=!0),"Bad request"==e.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=e.message,$("#myModal").modal("show")))}),$("html, body").animate({scrollTop:0}),this.isedit=!1,this.isedit=!1},e.prototype.AddDegree=function(e){var t=this;e.invalid?this.errMsg=!0:(this.errMsg=!1,0==this.isedit?this.ems.addDegree(this.degreeName,this.degreeCode,this.sessionid,this.uid).subscribe(function(n){"Unauthorised access"==n.message&&t.ems.sessionlogout(),t.ems.status=n.status,"Success"==n.status?(t.ems.msg=n.message,$("#myModal").modal("show"),t.ems.getDegree(t.sessionid,t.uid).subscribe(function(e){"Unauthorised access"==n.message&&t.ems.sessionlogout(),"Success"==e.status&&(t.degreeData=e.data)}),e.reset()):(0==n.data.length&&(t.nullMessage=!0),"Bad request"==n.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=n.message,$("#myModal").modal("show")))}):(this.ems.updateDegree(this.degreeId,this.degreeName,this.degreeCode,this.sessionid,this.uid).subscribe(function(n){"Unauthorised access"==n.message&&t.ems.sessionlogout(),t.ems.status=n.status,"Success"==n.status?(t.ems.msg=n.message,$("#myModal").modal("show"),t.degreeName="",t.degreeCode="",t.ems.getDegree(t.sessionid,t.uid).subscribe(function(e){"Unauthorised access"==n.message&&t.ems.sessionlogout(),"Success"==e.status&&(t.degreeData=e.data)}),e.reset()):(0==n.data.length&&(t.nullMessage=!0),"Bad request"==n.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=n.message,$("#myModal").modal("show")))}),this.isedit=!1))},e=r.b([Object(s.Component)({selector:"app-degreeadd",template:n("RaJv"),styles:[n("FPXP")]}),r.d("design:paramtypes",[a.a])],e)}(),o=n("xkgV"),d=n("Zseb"),c=n("Ip0R"),l=n("ZYCi"),g=n("gIcY"),p=n("fCu2");n.d(t,"routes",function(){return u}),n.d(t,"DegreeaddModule",function(){return h});var u=[{path:"",component:i,pathMatch:"full"}],h=function(){function e(){}return e.routes=u,e=r.b([Object(s.NgModule)({imports:[c.CommonModule,l.RouterModule.forChild(u),g.FormsModule,d.a,p.a.forRoot({confirmButtonType:"danger"}),o.a],declarations:[i],providers:[],bootstrap:[i]})],e)}()},FPXP:function(e,t){e.exports=""},RaJv:function(e,t){e.exports='<div class="row brdcrm-mrgn">\r\n        <div class="col-md-6 col-sm-6 col-xs-8">\r\n          <div >\r\n          <div class="panel-heading mainpanel-hd text-uppercase">\r\n          \r\n          </div>\r\n          </div>\r\n         </div>\r\n         <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n          <ol class="breadcrumb">\r\n            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>\r\n            <li ><a href="#/app/preExam"> Pre Examination Management</a></li>\r\n            <li class="active"> Degree add</li>\r\n            </ol>\r\n         </div>\r\n       </div>\r\n<div *ngIf="ems.isAdmin">\r\n    <section>\r\n            <div class="row margin-card">\r\n              <form #f="ngForm" (ngSubmit)="AddDegree(f)">\r\n                <div class="col-md-12" id="first-content">\r\n                    <div class="panel panel-primary" id="shadows">\r\n                        <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Add Degree\r\n                        </div>\r\n                        <div class="panel-body">\r\n                           \r\n                            <div class="row">\r\n                                <div class="col-md-12">\r\n                                    <div class="form-group">\r\n                                        <label for="name" id="labels">Name</label>\r\n                                        <input type="text" maxlength="40" [(ngModel)]="degreeName" required pattern="[a-zA-Z][a-zA-Z ]*" #nameControl="ngModel" class="form-control input-sm" placeholder="Enter degree name" name="degreeName" required > \r\n                                        <span style="color:red;" class="help-block" *ngIf="nameControl.errors?.required && nameControl.touched">\r\n                                                Name is required\r\n                                        </span>\r\n                                        <label style="color:red;" class="input-sm" *ngIf="nameControl.errors?.pattern && nameControl.touched && !(nameControl.errors?.required)">\r\n                                                Only Alphabets and space are allowed\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-12">\r\n                                    <div class="form-group">\r\n                                        <label for="code" id="labels">Code</label>\r\n                                        <input type="text"  maxlength="10" minlength="2"  [(ngModel)]="degreeCode"  pattern="^[a-zA-Z][a-zA-Z. ]*$" class="form-control input-sm" placeholder="Enter degree code" name="degreeCode" #codecontrol="ngModel" required>\r\n                                        <span style="color:red;" class="help-block" *ngIf="codecontrol.invalid && codecontrol.touched">\r\n                                                Must enter the degree code  of length upto 10\r\n                                            </span>\r\n                                            <span style="color:red;" class="help-block" *ngIf="codecontrol.errors?.pattern && codecontrol.touched && !(codecontrol.errors?.required)">\r\n                                                  Degree code  can be combination of  letters,space and \'.\'\r\n                                          </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div *ngIf="errMsg" class="red-text center error-message"\r\n                        style="text-align: center;font-size: 15px;color:red;">\r\n                        Please fill the required fields\r\n                      </div>\r\n                        \x3c!-- <div class="panel-footer panel-default text-right">\r\n                            <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i>&nbsp;Add</button>\r\n                        </div> --\x3e\r\n                        <div *ngIf="isedit==false" class="panel-footer panel-default text-right">\r\n                            <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i>&nbsp;Add</button>\r\n                        </div>\r\n                        <div *ngIf="isedit==true"class="panel-footer panel-default text-right">\r\n                          <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-wrench" aria-hidden="true"></i>&nbsp;Update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n    </section>\r\n\r\n    <section>\r\n            <div class="row">\r\n                <div class="col-md-12" id="first-content">\r\n                    <div class="panel panel-primary" id="shadows">\r\n                        <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Degree Details\r\n                        </div>\r\n                        <div class="panel-body" id="table-contents">\r\n\r\n                            <div class="row">\r\n\r\n                                <div id="no-more-tables">\r\n\r\n                                    <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                                        <thead class="cf">\r\n                                            <tr>\r\n                                                <th>No</th>\r\n                                                <th>Degree name</th>\r\n                                                <th>Degree code</th>\r\n                                                <th>Degree edit</th>\r\n                                                <th>Degree delete</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            \x3c!-- <tr>\r\n                                                <td data-title="No">1</td>\r\n                                                <td data-title="Degree name">Bachelor of arts</td>\r\n                                                <td data-title="Degree code">BA</td>\r\n                                               \r\n\r\n                                            </tr> --\x3e\r\n                                            <tr *ngFor="let i of degreeData | paginate: { itemsPerPage: 10, currentPage: p };let j=index;">\r\n                                              <td data-title="No">{{(10*(p-1))+j+1}}</td>\r\n                                              <td data-title="Degree name">{{i.deg_name}}</td>\r\n                                              <td data-title="Degree code">{{i.deg_code}}</td>\r\n                                              <td data-title="Degree edit"><a (click)="EditDegree(i.deg_id)" style="cursor:pointer"><i class="fa fa-pencil"></i></a>\r\n                                              <td data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                                                mwlConfirmationPopover\r\n                                                [popoverTitle]="popoverTitle"\r\n                                                [popoverMessage]="popoverMessage"\r\n                                                placement="left"\r\n                                                (confirm)="DeleteDegree(i.deg_id)"\r\n                                                (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td>\r\n                                            \r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style="text-align:center;" (pageChange)="p = $event" >\r\n                                        </pagination-controls>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class="panel-footer panel-default text-right">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </section>\r\n</div>\r\n<div *ngIf="!ems.isAdmin">\r\n    <section>\r\n            <div class="row margin-card">\r\n                <div class="col-md-12" id="first-content">\r\n                    <div class="panel panel-primary" id="shadows">\r\n                        <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Degree Details\r\n                        </div>\r\n                        <div class="panel-body" id="table-contents">\r\n\r\n                            <div class="row">\r\n\r\n                                <div id="no-more-tables">\r\n\r\n                                    <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                                        <thead class="cf">\r\n                                            <tr>\r\n                                                <th>No</th>\r\n                                                <th>Degree name</th>\r\n                                                <th>Degree code</th>\r\n                                               \r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            \x3c!-- <tr>\r\n                                                <td data-title="No">1</td>\r\n                                                <td data-title="Degree name">Bachelor of arts</td>\r\n                                                <td data-title="Degree code">BA</td>\r\n                                               \r\n\r\n                                            </tr> --\x3e\r\n                                            <tr *ngFor="let i of degreeData | paginate: { itemsPerPage: 20, currentPage: p };let j=index;">\r\n                                              <td data-title="No">{{(20*(p-1))+j+1}}</td>\r\n                                              <td data-title="Degree name">{{i.deg_name}}</td>\r\n                                              <td data-title="Degree code">{{i.deg_code}}</td>\r\n                                              \r\n                                            \r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <pagination-controls style="text-align:center;" (pageChange)="p = $event" >\r\n                                        </pagination-controls>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class="panel-footer panel-default text-right">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </section>\r\n</div>'},xkgV:function(e,t,n){"use strict";n.d(t,"a",function(){return g});var r=n("CcnG"),s=n("Ip0R"),a=function(){function e(){this.change=new r.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var t=!1;for(var n in this.instances[e.id])e[n]!==this.instances[e.id][n]&&(this.instances[e.id][n]=e[n],t=!0);return t},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,t){if(this.instances[e]){var n=this.instances[e];t<=Math.ceil(n.totalItems/n.itemsPerPage)&&1<=t&&(this.instances[e].currentPage=t,this.change.emit(e))}},e.prototype.setTotalItems=function(e,t){this.instances[e]&&0<=t&&(this.instances[e].totalItems=t,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,t){this.instances[e]&&(this.instances[e].itemsPerPage=t,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},e}(),i=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,t){if(t instanceof Array&&(t=t[0]),!(e instanceof Array)){var n=t.id||this.service.defaultId;return this.state[n]?this.state[n].slice:e}var r,s,a=t.totalItems&&t.totalItems!==e.length,o=this.createInstance(e,t),d=o.id,c=o.itemsPerPage;if(this.service.register(o),!a&&e instanceof Array){if(c=+c||i,s=(r=(o.currentPage-1)*c)+c,this.stateIsIdentical(d,e,r,s))return this.state[d].slice;var l=e.slice(r,s);return this.saveState(d,e,l,r,s),this.service.change.emit(d),l}return this.saveState(d,e,e,r,s),e},e.prototype.createInstance=function(e,t){var n=t;return this.checkConfig(n),{id:null!=n.id?n.id:this.service.defaultId(),itemsPerPage:+n.itemsPerPage||0,currentPage:+n.currentPage||1,totalItems:+n.totalItems||e.length}},e.prototype.checkConfig=function(e){var t=["itemsPerPage","currentPage"].filter(function(t){return!(t in e)});if(0<t.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+t.join(", "))},e.prototype.saveState=function(e,t,n,r,s){this.state[e]={collection:t,size:t.length,slice:n,start:r,end:s}},e.prototype.stateIsIdentical=function(e,t,n,r){var s=this.state[e];return!!s&&(!(s.size!==t.length||s.start!==n||s.end!==r)&&s.slice.every(function(e,r){return e===t[n+r]}))},e.decorators=[{type:r.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:a}]},e}();function d(e){return!!e&&"false"!==e}var c=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new r.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=d(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=d(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=d(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:r.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:r.ChangeDetectionStrategy.OnPush,encapsulation:r.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:r.Input}],maxSize:[{type:r.Input}],directionLinks:[{type:r.Input}],autoHide:[{type:r.Input}],responsive:[{type:r.Input}],previousLabel:[{type:r.Input}],nextLabel:[{type:r.Input}],screenReaderPaginationLabel:[{type:r.Input}],screenReaderPageLabel:[{type:r.Input}],screenReaderCurrentLabel:[{type:r.Input}],pageChange:[{type:r.Output}]},e}(),l=function(){function e(e,t){var n=this;this.service=e,this.changeDetectorRef=t,this.maxSize=7,this.pageChange=new r.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){n.id===e&&(n.updatePageLinks(),n.changeDetectorRef.markForCheck(),n.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,t=this.service.getInstance(this.id),n=this.outOfBoundCorrection(t);n!==t.currentPage?setTimeout(function(){e.setCurrent(n),e.pages=e.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,e.maxSize)}):this.pages=this.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,t,n,r){r=+r;for(var s=[],a=Math.ceil(n/t),i=Math.ceil(r/2),o=e<=i,d=a-i<e,c=!o&&!d,l=r<a,g=1;g<=a&&g<=r;){var p=void 0,u=this.calculatePageNumber(g,e,r,a);p=l&&(2===g&&(c||d)||g===r-1&&(c||o))?"...":u,s.push({label:p,value:u}),g++}return s},e.prototype.calculatePageNumber=function(e,t,n,r){var s=Math.ceil(n/2);return e===n?r:1===e?e:n<r?r-s<t?r-n+e:s<t?t-s+e:e:e},e.decorators=[{type:r.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:a},{type:r.ChangeDetectorRef}]},e.propDecorators={id:[{type:r.Input}],maxSize:[{type:r.Input}],pageChange:[{type:r.Output}]},e}(),g=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[s.CommonModule],declarations:[o,c,l],providers:[a],exports:[o,c,l]}]}],e.ctorParameters=function(){return[]},e}()}}]);