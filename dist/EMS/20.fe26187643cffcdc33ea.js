(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{gcBg:function(e,n){e.exports='\r\n\x3c!-- <div class="row brdcrm-mrgn">\r\n   <div class="col-md-6 col-sm-6 col-xs-8">\r\n     <div >\r\n     <div class="panel-heading mainpanel-hd text-uppercase">\r\n     </div>\r\n     </div>\r\n    </div>\r\n    <div class="col-md-6 col-sm-12 col-xs-12 pull-right">\r\n     <ol class="breadcrumb">\r\n       <li><a href="#/app/dashboard"><i class="fa fa-dashboard"></i> Home</a></li>\r\n       <li><a href="#/app/preExam">Pre Examination Management</a>\r\n         </li>\r\n         <li class="active">Users</li>\r\n       </ol>\r\n    </div>\r\n  </div> --\x3e\r\n<div *ngIf="ems.isAdmin==true">\r\n<section>\r\n    <div class="row margin-card">\r\n       <div class="col-md-12" id="first-content">\r\n         <form #f="ngForm" (ngSubmit)="Adduser(f)" id="Login">\r\n          <div class="panel panel-primary" id="shadows">\r\n             <div class="panel-heading " id="head-title"><i class="fa fa-info"></i>&nbsp;User details\r\n             </div>\r\n             <div class="panel-body">\r\n                <div class="row">\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Name<strong style="color:red;">*</strong></label>\r\n                         <input type="text" maxlength="25" class="form-control input-sm" pattern="[a-zA-Z][a-zA-Z ]*" placeholder="Enter full name" name="name" required [(ngModel)]="name"  #nameControl="ngModel" autofocus>\r\n                         <span style="color:red;" class="help-block" *ngIf="nameControl.errors?.required && nameControl.touched">\r\n                             Name is required\r\n                         </span>\r\n                         <label style="color:red;" class="input-sm" *ngIf="nameControl.errors?.pattern && nameControl.touched && !(nameControl.errors?.required)">\r\n                             Only Aphabets allowed\r\n                         </label>\r\n                      </div>\r\n                   </div>\r\n                    <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Address<strong style="color:red;">*</strong></label>\r\n                         <textarea maxlength="100" class="form-control input-sm" form="usrform" placeholder="Enter full address" name="address" required [(ngModel)]="address"  #addressControl="ngModel"></textarea>\r\n                         <span style="color:red;" class="help-block" *ngIf="addressControl.errors?.required && addressControl.touched">\r\n                             Address is required\r\n                         </span>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n                <div class="row">\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Location<strong style="color:red;">*</strong></label>\r\n                         <input type="text" maxlength="30" class="form-control input-sm" placeholder="Enter Location" name="location" required [(ngModel)]="location"  #locationControl="ngModel">\r\n                         <span style="color:red;" class="help-block" *ngIf="locationControl.errors?.required && locationControl.touched">\r\n                             Location is required\r\n                         </span>\r\n                      </div>\r\n                   </div>\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">City<strong style="color:red;">*</strong></label>\r\n                         <input type="text" maxlength="30" class="form-control input-sm" placeholder="Enter City" name="city" required [(ngModel)]="city"  #cityControl="ngModel">\r\n                         <span style="color:red;" class="help-block" *ngIf="cityControl.errors?.required && cityControl.touched">\r\n                             City is required\r\n                         </span>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n                <div *ngIf="isEdit==false">\r\n                <div class="row">\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Pin<strong style="color:red;">*</strong></label>\r\n                         <input type="text" pattern="^[1-9][0-9]{5}$" class="form-control input-sm" placeholder="Enter Pin" name="pin" required [(ngModel)]="pin"  #pinControl="ngModel">\r\n                         <span style="color:red;" class="help-block" *ngIf="pinControl.invalid && pinControl.touched">\r\n                           Must be a valid six digit pin Number\r\n                       </span>\r\n                      </div>\r\n                   </div>\r\n                    <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Email<strong style="color:red;">*</strong></label>\r\n                         <input type="email" id="email" class="form-control input-sm" placeholder="Enter Email" name="email" required [(ngModel)]="email"  #emailControl="ngModel" [email]=true>\r\n                         <div style="color:red;" class="help-block" *ngIf="emailControl.invalid && (emailControl.dirty|| emailControl.touched)">\r\n                             <div *ngIf="emailControl.errors?.required" >\r\n                               Email is required\r\n                             </div>\r\n                             <div *ngIf="emailControl.errors?.email ">Email must be valid</div>\r\n                           </div>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n                 <div class="row">\r\n                  <div class="col-md-6">\r\n                     <div class="form-group">\r\n                        <label for="pwd" id="labels">Employee Id<strong style="color:red;">*</strong></label>\r\n                        <input type="text" pattern="^[a-zA-Z0-9]{3,6}$" class="form-control input-sm" placeholder="Enter Employee Id" name="empid" required [(ngModel)]="empid"  #empidControl="ngModel">\r\n                        <span style="color:red;" class="help-block" *ngIf="empidControl.errors?.required && empidControl.touched">\r\n                              Employee Id is required\r\n                        </span>\r\n                        <span style="color:red;" class="help-block" *ngIf="empidControl.invalid && empidControl.touched">\r\n                         Must be a Alphanumeric with 3-6 characters\r\n                     </span>\r\n                     </div>\r\n                  </div>\r\n                   <div class="col-md-3">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Contact<strong style="color:red;">*</strong></label>\r\n                         <input type="text" class="form-control input-sm" pattern="^(?:(?:\\+|0{0,2})91(\\s*[\\-]\\s*)?|[0]?)?[6789]\\d{9,12}$"  placeholder="Enter Contact No" name="mobile" required [(ngModel)]="mobile"  #mobileControl="ngModel">\r\n                         <span style="color:red;" class="help-block" *ngIf="mobileControl.invalid && mobileControl.touched">\r\n                             Must be a valid Contact Number\r\n                         </span>\r\n                      </div>\r\n                   </div>\r\n                    <div class="col-md-3">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Phone</label>\r\n                         <input type="text" pattern="^[\\d]{3,4}[\\-\\s]*[\\d]{6,7}$" class="form-control input-sm" placeholder="Enter Phone No" name="phone"  [(ngModel)]="phone"  #phoneControl="ngModel">\r\n                         <span style="color:red;" class="help-block" *ngIf="phoneControl.errors?.pattern && phoneControl.dirty">\r\n                           Must be a valid land phone Number\r\n                       </span>\r\n                        </div>\r\n                   </div>\r\n                </div>\r\n                 <div class="row">\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Username<strong style="color:red;">*</strong></label>\r\n                         <input type="text" disabled class="form-control input-sm"  placeholder="Your email will be username" name="email1" required [(ngModel)]="email"  #unameControl="ngModel">\r\n                         \x3c!-- <span style="color:red;" class="help-block" *ngIf="unameControl.errors?.required && unameControl.touched">\r\n                             Username is required\r\n                         </span>\r\n                         <label style="color:red;" class="input-sm" *ngIf="unameControl.errors?.pattern && unameControl.touched && !(unameControl.errors?.required)">\r\n                             Only Aphabets allowed\r\n                         </label> --\x3e\r\n                      </div>\r\n                   </div>\r\n                    <div class="col-md-6">\r\n                      <div class="row">\r\n                        <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Password<strong style="color:red;">*</strong></label>\r\n                         <input type="password" class="form-control input-sm" placeholder="Enter password" name="password" required [(ngModel)]="password"  #passwordControl="ngModel"  pattern="^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$">\r\n                         <span style="color:red;" class="help-block" *ngIf="passwordControl.errors?.required && passwordControl.touched">\r\n                             Password is required\r\n                         </span>\r\n                           <span style="color:red;" class="help-block" *ngIf="passwordControl.errors?.pattern && passwordControl.touched">\r\n                               Password (UpperCase, LowerCase, Number,SpecialChar and min 6 Chars)\r\n                           </span>\r\n                      </div>\r\n                  </div>\r\n                  <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="pwd" id="labels">Confirm Password<strong style="color:red;">*</strong></label>\r\n                         <input type="password" class="form-control input-sm" placeholder="Confirm password" name="conpass" required [(ngModel)]="conpass"  #confirmPasswordControl="ngModel" confirm="password">\r\n                         <span style="color:red;" class="help-block" *ngIf="confirmPasswordControl.errors?.required && confirmPasswordControl.touched">\r\n                             confirm Password is required\r\n                         </span>\r\n                           <span style="color:red;" class="help-block" *ngIf=" confirmPasswordControl.touched && confirmPasswordControl.errors?.confirm && !(confirmPasswordControl.errors?.required)">\r\n                               Password MisMatch\r\n                           </span>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n                   </div>\r\n                </div>\r\n             </div>\r\n\r\n\r\n\r\n\r\n            <div *ngIf="isEdit">\r\n                  <div class="row">\r\n                        <div class="col-md-6">\r\n                           <div class="form-group">\r\n                              <label for="pwd" id="labels">Pin<strong style="color:red;">*</strong></label>\r\n                              <input type="text" pattern="^[1-9][0-9]{5}$" class="form-control input-sm" placeholder="Enter Pin" name="pin" required [(ngModel)]="pin"  #pinControl="ngModel">\r\n                              <span style="color:red;" class="help-block" *ngIf="pinControl.invalid && pinControl.touched">\r\n                                Must be a valid six digit pin Number\r\n                            </span>\r\n                           </div>\r\n                        </div>\r\n                         <div class="col-md-6">\r\n                           <div class="form-group">\r\n                              <label for="email" id="labels">Email<strong style="color:red;">*</strong></label>\r\n                              <input type="email" id="email" class="form-control input-sm" placeholder="Enter Email" name="email" required [(ngModel)]="email"  #emailControl="ngModel" [email]=true>\r\n                              <div style="color:red;" class="help-block" *ngIf="emailControl.invalid && (emailControl.dirty|| emailControl.touched)">\r\n                                  <div *ngIf="emailControl.errors?.required" >\r\n                                    Email is required\r\n                                  </div>\r\n                                  <div *ngIf="emailControl.errors?.email ">Email must be valid</div>\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                      <div class="row">\r\n                          <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                   <label for="pwd" id="labels">Employee Id<strong style="color:red;">*</strong></label>\r\n                                   <input type="text" pattern="^[a-zA-Z0-9]{3,6}$" class="form-control input-sm" placeholder="Enter Employee Id" name="empid" required [(ngModel)]="empid"  #empidControl="ngModel">\r\n                                   <span style="color:red;" class="help-block" *ngIf="empidControl.errors?.required && empidControl.touched">\r\n                                         Employee Id is required\r\n                                   </span>\r\n                                   <span style="color:red;" class="help-block" *ngIf="empidControl.invalid && empidControl.touched">\r\n                                    Must be a Alphanumeric with 3-6 characters\r\n                                </span>\r\n                                </div>\r\n                             </div>\r\n                        <div class="col-md-3">\r\n                           <div class="form-group">\r\n                              <label for="pwd" id="labels">Contact Number<strong style="color:red;">*</strong></label>\r\n                              <input type="text" class="form-control input-sm" pattern="^(?:(?:\\+|0{0,2})91(\\s*[\\-]\\s*)?|[0]?)?[6789]\\d{9,12}$"  placeholder="Enter Contact No" name="mobile" required [(ngModel)]="mobile"  #mobileControl="ngModel">\r\n                              <span style="color:red;" class="help-block" *ngIf="mobileControl.invalid && mobileControl.touched">\r\n                                  Must be a valid Contact Number\r\n                              </span>\r\n                           </div>\r\n                        </div>\r\n                         <div class="col-md-3">\r\n                           <div class="form-group">\r\n                              <label for="pwd" id="labels">Phone</label>\r\n                              <input type="phone" pattern="^[\\d]{3,4}[\\-\\s]*[\\d]{6,7}$" class="form-control input-sm" placeholder="Enter Phone No" name="phone"  [(ngModel)]="phone"  #phoneControl="ngModel">\r\n                              <span style="color:red;" class="help-block" *ngIf="phoneControl.errors?.pattern ">\r\n                                Must be a valid land phone Number\r\n                            </span>\r\n                             </div>\r\n                        </div>\r\n                     </div>\r\n            \r\n             \r\n         </div>\r\n\r\n\r\n                <hr>\r\n                 <div class="row">\r\n                          <p id="mini-title"><i class="fa fa-info-circle"></i>&nbsp;<b>Job details</b></p>\r\n                   <div class="col-md-6">\r\n\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Designation<strong style="color:red;">*</strong></label>\r\n                        <select class="form-control input-sm" name="designation" required [(ngModel)]="designation"  #designationControl="ngModel">\r\n                              <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                          <option *ngFor="let designation of designationdetails" value="{{designation.des_id}}">{{designation.des_name}}</option>\r\n                          \x3c!-- <option>#</option>\r\n                          <option>#</option>\r\n                          <option>#</option> --\x3e\r\n                        </select>\r\n                        <span style="color:red;" class="help-block" *ngIf="designationControl.errors?.required && designationControl.touched">\r\n                           Designation is required\r\n                       </span>\r\n                      </div>\r\n                   </div>\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Role<strong style="color:red;">*</strong></label>\r\n                        <select class="form-control input-sm" name="role" required [(ngModel)]="role" (change)="getrole($event.target.value)"  #roleControl="ngModel">\r\n                              <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                          <option *ngFor="let role of roledetails" value="{{role.role_id}}">{{role.role_name}}</option>\r\n                          \x3c!-- <option>#</option>\r\n                          <option>#</option>\r\n                          <option>#</option> --\x3e\r\n                          \r\n                        </select>\r\n                        <span style="color:red;" class="help-block" *ngIf="roleControl.errors?.required && roleControl.touched">\r\n                           Role is required\r\n                       </span>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n                 <div class="row">\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Branch<strong style="color:red;">*</strong></label>\r\n                        <select class="form-control input-sm" name="branch" required [(ngModel)]="branch" (change)="onChange($event.target.value)" #branchControl="ngModel">\r\n                              <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                          <option *ngFor="let branch of branchdetails" value="{{branch.branch_id}}">{{branch.branch_name}}</option>\r\n                          \x3c!-- <option>#</option>\r\n                          <option>#</option>\r\n                          <option>#</option> --\x3e\r\n                        </select>\r\n                        <span style="color:red;" class="help-block" *ngIf="branchControl.errors?.required && branchControl.touched">\r\n                           Branch is required\r\n                       </span>\r\n                      \r\n                      </div>\r\n                   </div>\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">Section<strong style="color:red;">*</strong></label>\r\n                        <select class="form-control input-sm" name="section" required [(ngModel)]="section"  #sectionControl="ngModel">\r\n                              <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                          <option *ngFor="let section of sectiondetails" value="{{section.section_id}}">{{section.section_name}}</option>\r\n                          \x3c!-- <option>#</option>\r\n                          <option>#</option>\r\n                          <option>#</option> --\x3e\r\n                        </select>\r\n                        <span style="color:red;" class="help-block" *ngIf="sectionControl.errors?.required && sectionControl.touched">\r\n                           Section is required\r\n                       </span>\r\n                       <span style="color:red;" class="help-block" *ngIf="NoSectionFlag">\r\n                        No  section available for the selected branch.\r\n                     </span>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n             \r\n              \r\n             \r\n                <div class="row" *ngIf="isVC==false">\r\n                   \r\n                  \r\n                   <div class="col-md-12">\r\n                      <label for="pwd" id="labels">Categories<strong style="color:red;">*</strong></label>\r\n                      <div class="holder">\r\n                        <div class="row">\r\n                          <div class="col-md-4">\r\n                      <div class="form-group">\r\n                         <label for="radios" id="labels"> category I<strong style="color:red;">*</strong></label><br>\r\n                         <div class="row">\r\n                            <div class="col-md-12">\r\n                         <label class="radio-inline" id="radio">\r\n                         <input type="radio"  name="unicat1" required [(ngModel)]="unicat1" value=001  #unicat1Control="ngModel">Teaching\r\n                         </label>\r\n                         <label class="radio-inline">\r\n                         <input type="radio" name="unicat1" required [(ngModel)]="unicat1" value=002 #unicat1Control="ngModel">Non-teaching\r\n                         </label>\r\n                      </div>\r\n\r\n                      </div>\r\n                         \r\n                      </div>\r\n                  </div>\r\n                  <div class="col-md-4">\r\n                      <div class="form-group">\r\n                         <label for="radios" id="labels"> category II <strong style="color:red;">*</strong></label><br>\r\n                         <div class="row">\r\n                            <div class="col-md-12">\r\n                         <label class="radio-inline" id="radio">\r\n                         <input type="radio"  name="unicat2" (change)="isCollege($event.target.value)" required [(ngModel)]="unicat2" value=101  #unicat2Control="ngModel">University\r\n                         </label>\r\n                         <label class="radio-inline">\r\n                         <input type="radio" name="unicat2" (change)="isCollege($event.target.value)"  required [(ngModel)]="unicat2" value=102  #unicat2Control="ngModel">College\r\n                         </label>\r\n                      </div>\r\n\r\n                      </div>\r\n                         \r\n                      </div>\r\n                  </div>\r\n                   <div class="col-md-4">\r\n                      <div class="form-group">\r\n                         <label for="radios" id="labels"> category III <strong style="color:red;">*</strong></label><br>\r\n                         <div class="row">\r\n                            <div class="col-md-12">\r\n                         \x3c!-- <label class="radio-inline" id="radio">\r\n                         <input type="radio" name="unicat3" required [(ngModel)]="unicat3"  #unicat3Control="ngModel">Temporary\r\n                         </label>\r\n                          <label class="radio-inline">\r\n                         <input type="radio" name="unicat3"  required [(ngModel)]="unicat3"  #unicat3Control="ngModel">Permanent\r\n                         </label> --\x3e\r\n                         <label class="radio-inline">\r\n                           <input type="radio" name="unicat3"   [(ngModel)]="unicat3"  value=201 required>Permanent\r\n                         </label>\r\n                         <label class="radio-inline">\r\n                             <input type="radio" name="unicat3" [(ngModel)]="unicat3" value=202 required  checked>Temporary\r\n                           </label>\r\n                          \r\n                      </div>\r\n\r\n                      </div>\r\n                         \r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n                      \r\n                       \r\n                   </div>\r\n                   </div>\r\n                   \r\n                </div>\r\n                <div class="row" *ngIf="isVC">\r\n                   \r\n                  \r\n                  <div class="col-md-12">\r\n                     <label for="pwd" id="labels">Categories<strong style="color:red;">*</strong></label>\r\n                     <div class="holder">\r\n                       <div class="row">\r\n                         <div class="col-md-4">\r\n                     <div class="form-group">\r\n                        <label for="radios" id="labels"> category I :</label><br>\r\n                        <div class="row">\r\n                           <div class="col-md-12">\r\n                        <label class="radio-inline" id="radio">\r\n                        <input type="radio" disabled name="unicat1" required [(ngModel)]="unicat1" value=001  #unicat1Control="ngModel">Teaching\r\n                        </label>\r\n                        <label class="radio-inline">\r\n                        <input type="radio" disabled name="unicat1" required [(ngModel)]="unicat1" value=002 #unicat1Control="ngModel">Non-teaching\r\n                        </label>\r\n                     </div>\r\n\r\n                     </div>\r\n                        \r\n                     </div>\r\n                 </div>\r\n                 <div class="col-md-4">\r\n                     <div class="form-group">\r\n                        <label for="radios" id="labels"> category II <strong style="color:red;">*</strong></label><br>\r\n                        <div class="row">\r\n                           <div class="col-md-12">\r\n                        <label class="radio-inline" id="radio">\r\n                        <input type="radio"  disabled name="unicat2"  required [(ngModel)]="unicat2" value=101  #unicat2Control="ngModel">University\r\n                        </label>\r\n                        <label class="radio-inline">\r\n                        <input type="radio" disabled name="unicat2"   required [(ngModel)]="unicat2" value=102  #unicat2Control="ngModel">College\r\n                        </label>\r\n                     </div>\r\n\r\n                     </div>\r\n                        \r\n                     </div>\r\n                 </div>\r\n                  <div class="col-md-4">\r\n                     <div class="form-group">\r\n                        <label for="radios" id="labels"> category III <strong style="color:red;">*</strong></label><br>\r\n                        <div class="row">\r\n                           <div class="col-md-12">\r\n                        \x3c!-- <label class="radio-inline" id="radio">\r\n                        <input type="radio" name="unicat3" required [(ngModel)]="unicat3"  #unicat3Control="ngModel">Temporary\r\n                        </label>\r\n                         <label class="radio-inline">\r\n                        <input type="radio" name="unicat3"  required [(ngModel)]="unicat3"  #unicat3Control="ngModel">Permanent\r\n                        </label> --\x3e\r\n                        <label class="radio-inline">\r\n                          <input type="radio" disabled name="unicat3"   [(ngModel)]="unicat3"  value=201 required>Permanent\r\n                        </label>\r\n                        <label class="radio-inline">\r\n                            <input type="radio" disabled name="unicat3" [(ngModel)]="unicat3" value=202 required  checked>Temporary\r\n                          </label>\r\n                         \r\n                     </div>\r\n\r\n                     </div>\r\n                        \r\n                     </div>\r\n                 </div>\r\n                 </div>\r\n                     \r\n                      \r\n                  </div>\r\n                  </div>\r\n                  \r\n               </div>\r\n               <div *ngIf="isCenter">\r\n                  <hr>\r\n                 <div class="row">\r\n                          <p id="mini-title"><i class="fa fa-info-circle"></i>&nbsp;<b>College details</b></p>\r\n                   <div class="col-md-6">\r\n\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">District<strong style="color:red;">*</strong></label>\r\n                        <select class="form-control input-sm" name="district" (change)="getclg($event.target.value)" required [(ngModel)]="district"  #districtControl="ngModel">\r\n                              <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                          <option *ngFor="let district of districtlist" value="{{district}}">{{district}}</option>\r\n                          \x3c!-- <option>#</option>\r\n                          <option>#</option>\r\n                          <option>#</option> --\x3e\r\n                        </select>\r\n                        <span style="color:red;" class="help-block" *ngIf="districtControl.errors?.required && districtControl.touched">\r\n                           District is required\r\n                       </span>\r\n                      </div>\r\n                   </div>\r\n                   <div class="col-md-6">\r\n                      <div class="form-group">\r\n                         <label for="email" id="labels">College Name<strong style="color:red;">*</strong></label>\r\n                        <select class="form-control input-sm" name="cname" required [(ngModel)]="cname"  #cnameControl="ngModel">\r\n                              <option  diabled selected value="undefined" disabled>----select your option-------- </option>\r\n                          <option *ngFor="let center of centername" value="{{center.center_id}}">{{center.center_name}}</option>\r\n                          \x3c!-- <option>#</option>\r\n                          <option>#</option>\r\n                          <option>#</option> --\x3e\r\n                          \r\n                        </select>\r\n                        <span style="color:red;" class="help-block" *ngIf="cnameControl.errors?.required && cnameControl.touched">\r\n                           College Name is required\r\n                       </span>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n               </div>\r\n                <div  *ngIf="errMsg" class="red-text center error-message" style="text-align: center;font-size: 15px;color:red;">\r\n                   Please fill valid data in the required fields\r\n                   </div>\r\n             </div>\r\n             <div *ngIf="!isEdit" class="panel-footer panel-default text-right">\r\n                <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i>&nbsp;Add User</button>\r\n             </div>\r\n             <div *ngIf="isEdit" class="panel-footer panel-default text-right">\r\n               <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i>&nbsp;Update User</button>\r\n            </div>\r\n         \r\n          </div>\r\n         </form>\r\n       </div>\r\n    </div>\r\n\r\n</section>\r\n\r\n<section>\r\n<div class="row">\r\n   <div class="col-md-12" id="first-content">\r\n       <div class="panel panel-primary" id="shadows">\r\n           <div class="panel-heading " id="head-title">\r\n              <div class="row">\r\n               <div class="col-md-4">\r\n                  <i class="fa fa-info-circle userdetails"></i>&nbsp;User Details\r\n               </div>\r\n               <div class="col-md-8">\r\n                  \x3c!-- <form class="navbar-form navbar-left pull-right radius">\r\n                        <div class="form-group">\r\n                          <input type="text" class="form-control radius" placeholder="Search">\r\n                        </div>\r\n                        <button type="submit" class="btn btn-default radius"><i class="fa fa-search"></i></button>\r\n                      </form> --\x3e\r\n\r\n                      <input type="text" class="black pull-right radius" [(ngModel)]="user_name" style="font-family: FontAwesome;" \r\n                      type="text" placeholder="&#xF002; Serach by name"/>\r\n                </div>\r\n               </div>\r\n           </div>\r\n           <div class="panel-body" id="table-contents">\r\n\r\n               <div class="row">\r\n    \r\n           \r\n             <div id="no-more-tables">\r\n                <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf"  id="myTable">\r\n                   <thead class="cf">\r\n                      <tr>\r\n                         <th>Sl.No</th>\r\n                         <th>Name</th>\r\n                         <th>Address</th>\r\n                         <th class="numeric">Role</th>\r\n                        \r\n                         <th class="numeric">Designation</th>\r\n                         \x3c!-- <th class="numeric">Category</th> --\x3e\r\n                         <th class="numeric">Mobile</th>\r\n                         <th class="numeric">Edit</th>\r\n                         <th class="numeric">Delete</th>\r\n\r\n                      </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                      <tr *ngFor="let user of userdetails  |  customerEmailFilter:user_name | paginate: { itemsPerPage: 10, currentPage: p };let i = index">\r\n                         <td data-title="Sl.No">{{(10*(p-1))+i+1}}</td>\r\n                         <td data-title="Name">{{user.user_name}}</td>\r\n                         <td data-title="Address" class="numeric">{{user.user_address}}</td>\r\n                         <td data-title="Role" class="numeric">{{user.role_name}}</td>\r\n                         <td data-title="Designation" class="numeric">{{user.designation_name}}</td>\r\n                         \x3c!-- <td data-title="Category" class="numeric">{{user.}}</td> --\x3e\r\n                         <td data-title="Mobile" class="numeric">{{user.user_mobile}}</td>\r\n                         <td data-title="Edit"><a (click)="userEdit(user.user_id)"  style="cursor:pointer"><i class="fa fa-pencil"></i></a></td>\r\n                         <td data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                          mwlConfirmationPopover\r\n                          [popoverTitle]="popoverTitle"\r\n                          [popoverMessage]="popoverMessage"\r\n                          placement="left"\r\n                          (confirm)="DeleteUser(user.user_id)"\r\n                          (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td>\r\n                      </tr>\r\n                     \r\n                      \r\n                     \r\n\r\n                   </tbody>\r\n                </table>\r\n                <pagination-controls style="text-align:center;" (pageChange)="p = $event"></pagination-controls>\r\n             </div>\r\n            </div>\r\n\r\n         </div>\r\n         <div class="panel-footer panel-default text-right">\r\n\r\n         </div>\r\n\r\n     </div>\r\n </div>\r\n</div>\r\n</section>\r\n</div>\r\n\r\n<div *ngIf="!ems.isAdmin" >\r\n                 \r\n<section>\r\n   <div class="row">\r\n      <div class="col-md-12" id="first-content">\r\n          <div class="panel panel-primary" id="shadows">\r\n              <div class="panel-heading " id="head-title">\r\n                  <div class="row">\r\n                        <div class="col-md-4">\r\n                          <i class="fa fa-info-circle userdetails"></i>&nbsp;User Details\r\n                        </div>\r\n                        <div class="col-md-8">\r\n                              \x3c!-- <form class="navbar-form navbar-left pull-right radius">\r\n                                    <div class="form-group">\r\n                                      <input type="text" class="form-control radius" placeholder="Search">\r\n                                    </div>\r\n                                    <button type="submit" class="btn btn-default radius"><i class="fa fa-search"></i></button>\r\n                                  </form> --\x3e\r\n            \r\n                                  <input type="text" class="black pull-right radius" [(ngModel)]="user_name" style="font-family: FontAwesome;" \r\n                                  type="text" placeholder="&#xF002; Serach by name"/>\r\n                            </div>\r\n                           </div>\r\n              </div>\r\n              <div class="panel-body" id="table-contents">\r\n\r\n                  <div class="row">\r\n       \r\n              \r\n                <div id="no-more-tables">\r\n                   <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                      <thead class="cf">\r\n                         <tr>\r\n                            <th>Sl.No</th>\r\n                            <th>Name</th>\r\n                            <th>Address</th>\r\n                            <th class="numeric">Role</th>\r\n                           \r\n                            <th class="numeric">Designation</th>\r\n                            \x3c!-- <th class="numeric">Category</th> --\x3e\r\n                            <th class="numeric">Mobile</th>\r\n                            \x3c!-- <th class="numeric">Edit</th>\r\n                            <th class="numeric">Delete</th> --\x3e\r\n\r\n                         </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                         <tr *ngFor="let user of userdetails |  customerEmailFilter:user_name | paginate: { itemsPerPage: 10, currentPage: p };let i = index">\r\n                            <td data-title="Sl.No">{{(10*(p-1))+i+1}}</td>\r\n                            <td data-title="Name">{{user.user_name}}</td>\r\n                            <td data-title="Address" class="numeric">{{user.user_address}}</td>\r\n                            <td data-title="Role" class="numeric">{{user.role_name}}</td>\r\n                            <td data-title="Designation" class="numeric">{{user.designation_name}}</td>\r\n                            \x3c!-- <td data-title="Category" class="numeric">{{user.}}</td> --\x3e\r\n                            <td data-title="Mobile" class="numeric">{{user.user_mobile}}</td>\r\n                            \x3c!-- <td data-title="Edit"><a (click)="userEdit(user.user_id)"  style="cursor:pointer"><i class="fa fa-pencil"></i></a></td>\r\n                            <td data-title="Delete" class="editdel"><a class="btn btn-default"\r\n                             mwlConfirmationPopover\r\n                             [popoverTitle]="popoverTitle"\r\n                             [popoverMessage]="popoverMessage"\r\n                             placement="top"\r\n                             (confirm)="DeleteUser(user.user_id)"\r\n                             (cancel)="cancelClicked = true"   role="button" title="Delete"><i class="fa fa-trash"></i></a></td> --\x3e\r\n                         </tr>\r\n                        \r\n                         \r\n                        \r\n\r\n                      </tbody>\r\n                   </table>\r\n                   <pagination-controls style="text-align:center;" (pageChange)="p = $event"></pagination-controls>\r\n                </div>\r\n               </div>\r\n\r\n            </div>\r\n            <div class="panel-footer panel-default text-right">\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n </section>\r\n</div>\r\n'},uFaf:function(e,n){e.exports=""},v3Ez:function(e,n,r){"use strict";r.r(n);var t=r("mrSG"),i=r("CcnG"),s=r("qmRI"),a=r("YNg7"),o=function(){function e(e,n){var r=this;this.ems=e,this.EncrDecr=n,this.errMsg=!1,this.isEdit=!1,this.isVC=!1,this.isCenter=!1,this.centername=[],this.p=1,this.districtlist=["Kannur","Wayanad","Kasaragod"],this.popoverTitle="Delete User",this.popoverMessage="Are you sure to delete",this.confirmClicked=!1,this.cancelClicked=!1,this.ems.active=2,this.ems.isAdmin=!0,this.ems.login("emsadmin@yopmail.com","Test@123").subscribe(function(e){"Success"==e.status&&(localStorage.setItem("sessionid",e.data.session_token),localStorage.setItem("uid",e.data.user_id),localStorage.setItem("role",e.data.role_name),localStorage.setItem("cen_id",e.data.cen_id),localStorage.setItem("username",e.data.user_name),localStorage.setItem("permission",e.data.action_list),r.sessionid=localStorage.getItem("sessionid"),r.u_id=localStorage.getItem("uid"),r.errMsg=!1,r.getuseradddetails())})}return e.prototype.ngOnInit=function(){},e.prototype.Adduser=function(e){var n=this;this.errMsg=!1,e.invalid?this.errMsg=!0:(null==this.phone&&(this.phone=""),0==this.isCenter&&(this.cname="-1"),this.errMsg=!1,this.isEdit?this.ems.editUser(this.uid,this.name,this.address,this.location,this.city,this.mobile,this.phone,this.role,this.designation,this.unicat1,this.unicat2,this.unicat3,this.branch,this.section,this.pin,this.cname,this.sessionid,this.u_id,this.empid,this.email).subscribe(function(r){n.ems.status=r.status,"Success"==r.status?(n.getuseradddetails(),n.ems.msg=r.message,$("#myModal").modal("show"),e.reset(),n.NoSectionFlag=!1,n.isCenter=!1,n.isEdit=!1):(n.phone||(n.phone=null),"Bad request"==r.message?(n.ems.msg="Internal Server Error",$("#myModal").modal("show")):(n.ems.msg=r.message,$("#myModal").modal("show")))}):(this.password1=this.password,this.ems.adduser(this.empid,this.name,this.address,this.location,this.city,this.mobile,this.phone,this.email,this.email,this.password1,this.role,this.designation,this.unicat1,this.unicat2,this.unicat3,this.branch,this.section,this.pin,this.cname,this.sessionid,this.u_id).subscribe(function(r){n.ems.status=r.status,"Success"==r.status?(n.getuseradddetails(),n.ems.msg=r.message,$("#myModal").modal("show"),e.reset(),n.NoSectionFlag=!1,n.isCenter=!1,n.isEdit=!1):("Unauthorised access"==r.message&&n.ems.sessionlogout(),"Bad request"==r.message?(n.ems.msg="Internal Server Error",$("#myModal").modal("show")):(n.ems.msg=r.message,$("#myModal").modal("show")))})))},e.prototype.userEdit=function(e){var n=this;this.errMsg=!1,this.uid=e,this.ems.getUserDetail(e,this.sessionid,this.u_id).subscribe(function(e){"Success"==e.status?(n.isEdit=!0,$("html, body").animate({scrollTop:0}),n.name=e.data.user_name,n.address=e.data.user_address,n.location=e.data.user_location,n.city=e.data.user_city,n.pin=e.data.user_pin,n.mobile=e.data.user_mobile,n.phone=e.data.user_phone,n.designation=e.data.des_id,n.role=e.data.role_id,n.branch=e.data.branch_id,n.onChange(n.branch),n.section=e.data.section_id,n.unicat1=e.data.user_cat1,n.unicat2=e.data.user_cat2,n.unicat3=e.data.user_cat3,n.district=e.data.cen_district,n.email=e.data.user_email,n.empid=e.data.emp_id,"102"==n.unicat2&&(n.getclg(n.district),n.cname=e.data.cen_id),"102"==n.unicat2?n.isCenter=!0:n.isCenter=!1):(n.ems.status=e.status,n.ems.msg="Internal Server Error",$("#myModal").modal("show"))})},e.prototype.DeleteUser=function(e){var n=this;this.errMsg=!1,this.ems.deleteUser(e,this.sessionid,this.u_id).subscribe(function(e){n.ems.status=e.status,"Success"==e.status?(document.getElementById("Login").reset(),$("html, body").animate({scrollTop:0}),n.getuseradddetails(),n.ems.msg=e.message,$("#myModal").modal("show")):"Bad request"==e.message?(n.ems.msg="Internal Server Error",$("#myModal").modal("show")):(n.ems.msg=e.message,$("#myModal").modal("show"))})},e.prototype.getrole=function(e){this.isCenter=!1;for(var n=0,r=this.roledetails;n<r.length;n++){var t=r[n];t.role_id==e&&(this.rname=t.role_name)}"Vice Chancelor"==this.rname?(this.isVC=!0,this.unicat1="002",this.unicat2="101",this.unicat3="201",this.isCenter=!1):(this.isVC=!1,this.unicat1=null,this.unicat2=null,this.unicat3=null,this.cname=null,this.district=null)},e.prototype.isCollege=function(e){"102"==e?this.isCenter=!0:(this.isCenter=!1,this.cname=null,this.district=null)},e.prototype.getclg=function(e){this.centername=[];for(var n=0,r=this.centerdetails;n<r.length;n++){var t=r[n];t.center_district==e&&this.centername.push(t)}},e.prototype.onChange=function(e){var n=this;this.NoSectionFlag=!1,this.sectiondetails=[],this.ems.branchspecificsection(e,this.sessionid,this.u_id).subscribe(function(e){n.sectiondetails=e.data,0==e.data.length?n.NoSectionFlag=!0:n.NoSectionFlag=!1})},e.prototype.getuseradddetails=function(){var e=this;this.ems.getAllDesignation(this.sessionid,this.u_id).subscribe(function(n){e.designationdetails=n.data,e.ems.getRole(e.sessionid,e.u_id).subscribe(function(n){e.roledetails=n.data,e.ems.getBranch(e.sessionid,e.u_id).subscribe(function(n){e.branchdetails=n.data,e.ems.getExamCente(e.sessionid,e.u_id).subscribe(function(n){e.centerdetails=n.data,e.ems.getUser(e.sessionid,e.u_id).subscribe(function(n){e.userdetails=n.data})})})})})},e=t.b([Object(i.Component)({selector:"app-adduser",template:r("gcBg"),styles:[r("uFaf")]}),t.d("design:paramtypes",[s.a,a.a])],e)}(),l=r("Zseb"),d=r("Ip0R"),c=r("ZYCi"),p=r("gIcY"),u=r("xkgV"),g=r("fCu2"),m=function(){function e(){}var n;return n=e,e.prototype.validate=function(e){var n=e.root.get(this.appConfirmEqualValidator);if(n)var r=n.valueChanges.subscribe(function(){e.updateValueAndValidity(),r.unsubscribe()});return n&&n.value!=e.value?{confirm:!0}:null},t.b([Object(i.Input)("confirm"),t.d("design:type",String)],e.prototype,"appConfirmEqualValidator",void 0),e=n=t.b([Object(i.Directive)({selector:"[confirm]",providers:[{provide:p.NG_VALIDATORS,useExisting:n,multi:!0}]})],e)}(),h=function(){function e(){}return e.prototype.transform=function(e,n){return void 0===n?e:e.filter(function(e){return e.user_name.toLowerCase().includes(n.toLowerCase())})},e=t.b([Object(i.Pipe)({name:"customerEmailFilter"})],e)}();r.d(n,"routes",function(){return v}),r.d(n,"AdduserModule",function(){return b});var v=[{path:"",component:o,pathMatch:"full"}],b=function(){function e(){}return e.routes=v,e=t.b([Object(i.NgModule)({imports:[d.CommonModule,c.RouterModule.forChild(v),p.FormsModule,p.ReactiveFormsModule,l.a,u.a,g.a.forRoot({confirmButtonType:"danger"})],declarations:[o,m,h],providers:[],bootstrap:[o]})],e)}()},xkgV:function(e,n,r){"use strict";r.d(n,"a",function(){return p});var t=r("CcnG"),i=r("Ip0R"),s=function(){function e(){this.change=new t.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var n=!1;for(var r in this.instances[e.id])e[r]!==this.instances[e.id][r]&&(this.instances[e.id][r]=e[r],n=!0);return n},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,n){if(this.instances[e]){var r=this.instances[e];n<=Math.ceil(r.totalItems/r.itemsPerPage)&&1<=n&&(this.instances[e].currentPage=n,this.change.emit(e))}},e.prototype.setTotalItems=function(e,n){this.instances[e]&&0<=n&&(this.instances[e].totalItems=n,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,n){this.instances[e]&&(this.instances[e].itemsPerPage=n,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r]);return n},e}(),a=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,n){if(n instanceof Array&&(n=n[0]),!(e instanceof Array)){var r=n.id||this.service.defaultId;return this.state[r]?this.state[r].slice:e}var t,i,s=n.totalItems&&n.totalItems!==e.length,o=this.createInstance(e,n),l=o.id,d=o.itemsPerPage;if(this.service.register(o),!s&&e instanceof Array){if(d=+d||a,i=(t=(o.currentPage-1)*d)+d,this.stateIsIdentical(l,e,t,i))return this.state[l].slice;var c=e.slice(t,i);return this.saveState(l,e,c,t,i),this.service.change.emit(l),c}return this.saveState(l,e,e,t,i),e},e.prototype.createInstance=function(e,n){var r=n;return this.checkConfig(r),{id:null!=r.id?r.id:this.service.defaultId(),itemsPerPage:+r.itemsPerPage||0,currentPage:+r.currentPage||1,totalItems:+r.totalItems||e.length}},e.prototype.checkConfig=function(e){var n=["itemsPerPage","currentPage"].filter(function(n){return!(n in e)});if(0<n.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+n.join(", "))},e.prototype.saveState=function(e,n,r,t,i){this.state[e]={collection:n,size:n.length,slice:r,start:t,end:i}},e.prototype.stateIsIdentical=function(e,n,r,t){var i=this.state[e];return!!i&&(!(i.size!==n.length||i.start!==r||i.end!==t)&&i.slice.every(function(e,t){return e===n[r+t]}))},e.decorators=[{type:t.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:s}]},e}();function l(e){return!!e&&"false"!==e}var d=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new t.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=l(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=l(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:t.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:t.Input}],maxSize:[{type:t.Input}],directionLinks:[{type:t.Input}],autoHide:[{type:t.Input}],responsive:[{type:t.Input}],previousLabel:[{type:t.Input}],nextLabel:[{type:t.Input}],screenReaderPaginationLabel:[{type:t.Input}],screenReaderPageLabel:[{type:t.Input}],screenReaderCurrentLabel:[{type:t.Input}],pageChange:[{type:t.Output}]},e}(),c=function(){function e(e,n){var r=this;this.service=e,this.changeDetectorRef=n,this.maxSize=7,this.pageChange=new t.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){r.id===e&&(r.updatePageLinks(),r.changeDetectorRef.markForCheck(),r.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,n=this.service.getInstance(this.id),r=this.outOfBoundCorrection(n);r!==n.currentPage?setTimeout(function(){e.setCurrent(r),e.pages=e.createPageArray(n.currentPage,n.itemsPerPage,n.totalItems,e.maxSize)}):this.pages=this.createPageArray(n.currentPage,n.itemsPerPage,n.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var n=Math.ceil(e.totalItems/e.itemsPerPage);return n<e.currentPage&&0<n?n:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,n,r,t){t=+t;for(var i=[],s=Math.ceil(r/n),a=Math.ceil(t/2),o=e<=a,l=s-a<e,d=!o&&!l,c=t<s,p=1;p<=s&&p<=t;){var u=void 0,g=this.calculatePageNumber(p,e,t,s);u=c&&(2===p&&(d||l)||p===t-1&&(d||o))?"...":g,i.push({label:u,value:g}),p++}return i},e.prototype.calculatePageNumber=function(e,n,r,t){var i=Math.ceil(r/2);return e===r?t:1===e?e:r<t?t-i<n?t-r+e:i<n?n-i+e:e:e},e.decorators=[{type:t.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:s},{type:t.ChangeDetectorRef}]},e.propDecorators={id:[{type:t.Input}],maxSize:[{type:t.Input}],pageChange:[{type:t.Output}]},e}(),p=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[i.CommonModule],declarations:[o,d,c],providers:[s],exports:[o,d,c]}]}],e.ctorParameters=function(){return[]},e}()}}]);