(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"1/G6":function(e,t,n){"use strict";n.r(t);var s=n("mrSG"),r=n("CcnG"),a=n("ZYCi"),i=n("qmRI"),o=function(){function e(e,t){this.router=e,this.ems=t,this.errMsg=!1,this.errMesssage=!1,this.disablebtn=!0,this.examData=[],this.any=[],this.courseListData=[],this.presentData=[],this.absentData=[],this.smpList=[],this.checked=!1,this.nullMessage=!1,this.isvisible=!1,this.ems.active=4}return e.prototype.onChangeExam=function(e){var t=this;this.pgmData=[],this.programname=null,this.courseListData=[],this.course=null,this.nullMessage=!1,this.ems.getprglist(e,this.sessionid,this.userid).subscribe(function(e){t.pgmData=e.data,"Unauthorised access"==e.message&&t.ems.sessionlogout()})},e.prototype.onChange=function(e){var t=this;this.nullMessage=!1,this.courseListData=[],this.course=null,this.ems.getCourseListInfo(e,this.sessionid,this.userid).subscribe(function(e){t.courseListData=e.data,"Unauthorised access"==e.message&&t.ems.sessionlogout()})},e.prototype.saveAbsentee=function(e){var t=this;e.invalid?this.errMsg=!0:(this.isvisible=!0,this.errMsg=!1,this.ems.csAbsenteeFind(+this.examname,+this.centerId,+this.programname,+this.course,this.sessionid,+this.userid).subscribe(function(e){if(t.smpList=[],t.ems.status=e.status,"Success"==e.status){t.ems.msg=e.message,$("#myModal").modal("show"),t.examinationname=t.examname,t.centername=t.centerId,t.coursename=t.course,t.presentData=e.data[0].present_list,t.absentData=e.data[1].absentee_list;for(var n=0;n<t.presentData.length;n++)t.presentData[n].smp_status,t.smpList.push({id:n,student_reg:t.presentData[n].student_reg,student_name:t.presentData[n].student_name,smp_status:t.presentData[n].smp_status});t.nullMessage=!1}else"Unauthorised access"==e.message&&t.ems.sessionlogout(),0==e.data.length&&(t.nullMessage=!0),"Bad request"==e.message?(t.ems.msg="Internal Server Error",$("#myModal").modal("show")):(t.ems.msg=e.message,$("#myModal").modal("show"))}))},e.prototype.submitAbsenteeList=function(){var e=this;this.ems.csAbsenteeSubmit(+this.examinationname,+this.centername,+this.coursename,this.smpList,this.sessionid,+this.userid).subscribe(function(t){e.ems.status=t.status,"Success"==t.status?(e.ems.msg=t.message,e.smpList="",e.absentData=[],e.presentData=[],e.checked=!1,e.disablebtn=!0,document.getElementById("Login").reset(),$("#myModal").modal("show"),e.isvisible=!1,$("html, body").animate({scrollTop:0})):(e.isvisible=!0,"Unauthorised access"==t.message&&e.ems.sessionlogout(),"Bad request"==t.message?(e.ems.msg="Internal Server Error",$("#myModal").modal("show")):(e.ems.msg=t.message,$("#myModal").modal("show")),$("html, body").animate({scrollTop:0}))})},e.prototype.change=function(e){this.check=e.target.value},e.prototype.onSelect=function(e){e.target.checked?this.disablebtn=!1:this.disablebtn=!0},e.prototype.ngOnInit=function(){var e=this;$("html, body").animate({scrollTop:0}),this.sessionid=localStorage.getItem("sessionid"),this.userid=localStorage.getItem("uid"),this.centerId=localStorage.getItem("cen_id"),this.ems.getCenterSpecificExam(this.centerId,this.sessionid,this.userid).subscribe(function(t){e.examData=t.data,"Unauthorised access"==t.message&&e.ems.sessionlogout()})},e=s.b([Object(r.Component)({selector:"app-absenteesubmit",template:n("qV77"),styles:[n("o8aY")]}),s.d("design:paramtypes",[a.Router,i.a])],e)}(),c=n("Zseb"),l=n("Ip0R"),d=n("gIcY"),p=n("xkgV");n.d(t,"routes",function(){return u}),n.d(t,"AbsenteesubmitModule",function(){return g});var u=[{path:"",component:o,pathMatch:"full"}],g=function(){function e(){}return e.routes=u,e=s.b([Object(r.NgModule)({imports:[l.CommonModule,a.RouterModule.forChild(u),d.FormsModule,c.a,p.a],declarations:[o],providers:[],bootstrap:[o]})],e)}()},o8aY:function(e,t){e.exports=""},qV77:function(e,t){e.exports='<div class="row brdcrm-mrgn">\r\n\x3c!--   <div class="col-md-6 col-sm-6 col-xs-8">\r\n    <div >\r\n    <div class="panel-heading mainpanel-hd text-uppercase">\r\n      Examination Management System\r\n    </div>\r\n    </div>\r\n   </div> --\x3e\r\n   <div class="col-md-6 col-sm-6 col-xs-4 pull-right">\r\n    <ol class="breadcrumb">\r\n      <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>\r\n      <li><a href="#app/exam">Examination Management</a></li>\r\n      <li class="active">absent</li>\r\n      </ol>\r\n   </div>\r\n </div>\r\n\r\n<section>\r\n  \x3c!-- <div class="container"> --\x3e\r\n  <div class="row margin-card">\r\n\r\n    <div class="col-md-12" id="first-content">\r\n      <form #f="ngForm" id="Login" (ngSubmit)="saveAbsentee(f)">\r\n        <div class="panel panel-primary" id="shadows">\r\n          <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Chief superintendent\r\n            absentee statement\r\n          </div>\r\n          <div class="panel-body">\r\n\r\n\r\n            <div class="row">\r\n              <div class="col-md-12">\r\n                <div class="row">\r\n                  <div class="col-md-4">\r\n                    <div class="form-group">\r\n                      <label for="email" id="labels">Exam<strong style="color:red;">*</strong></label>\r\n                      <select class="form-control input-sm" name="examname" placeholder="select" required\r\n                        [(ngModel)]="examname" #examnameControl="ngModel"  (ngModelChange)="onChangeExam($event)">\r\n                        <option hidden value="undefined" disabled selected>-Select exam-</option>\r\n                        <option *ngFor="let item of examData" value="{{item.exam_id}}">{{item.exam_name}}</option>\r\n\r\n\r\n                      </select>\r\n                      <span style="color:red;" *ngIf="examnameControl.errors?.required && examnameControl.touched">\r\n                        Exam is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class="col-md-4">\r\n                    <div class="form-group">\r\n                      <label for="programname" id="labels">Programme:<strong style="color:red;">*</strong></label>\r\n                      <select class="form-control input-sm" placeholder="Enter Program name" name="programname" required\r\n                        [(ngModel)]="programname" #programnameControl="ngModel" (ngModelChange)="onChange($event)">\r\n                        <option value="undefined" disabled selected>-Select program-</option>\r\n                        <option *ngFor="let items of pgmData" value="{{items.program_id}}">{{items.program_name}}</option>\r\n                      </select>\r\n                      <span style="color:red;"\r\n                        *ngIf="programnameControl.errors?.required && programnameControl.touched">\r\n                        Programme is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class="col-md-4">\r\n                    <div class="form-group">\r\n                      <label for="course" id="labels">Course<strong style="color:red;">*</strong></label>\r\n                      <select class="form-control input-sm" placeholder="Enter Course name" name="course" required\r\n                        [(ngModel)]="course" #courseControl="ngModel">\r\n                        <option value="undefined" disabled selected>-Select course-</option>\r\n\r\n                        <option *ngFor="let k of courseListData" value="{{k.course_id}}">{{k.course_name}}</option>\r\n\r\n\r\n                      </select>\r\n                      <span style="color:red;" *ngIf="courseControl.errors?.required && courseControl.touched">\r\n                        Course is required\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div *ngIf="errMsg" class="red-text center error-message"\r\n              style="text-align: center;font-size: 15px;color:red;">\r\n              Please fill valid data in the required fields\r\n            </div>\r\n\r\n          </div>\r\n          <div class="panel-footer panel-default text-right">\r\n            <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;Find</button>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  \x3c!-- </div> --\x3e\r\n\r\n</section>\r\n<section *ngIf="isvisible">\r\n  \x3c!-- <div class="container"> --\x3e\r\n  <div class="row">\r\n    <div class="col-md-12" id="first-content">\r\n      <div *ngIf="nullMessage==false" class="panel panel-primary" id="shadows" >\r\n        <div class="panel-heading " id="head-title"><i class="fa fa-info-circle"></i>&nbsp;Absentee Statement\r\n        </div>\r\n        <div class="panel-body" id="table-contents">\r\n\r\n          <div class="row">\r\n\r\n            <div id="no-more-tables">\r\n\r\n              <table class="col-md-12 col-sm-12 col-xs-12 table-bordered table-striped table-condensed cf">\r\n                <thead class="cf">\r\n                  <tr>\r\n                    \x3c!-- <th>No</th> --\x3e\r\n                    <th>Register number</th>\r\n                    <th>Name</th>\r\n\r\n                    <th>SMP</th>\r\n\r\n\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor="let item of smpList; let j=index">\r\n                    \x3c!-- <tr *ngFor="let item of list; let j=index"> --\x3e\r\n\r\n                    \x3c!-- <td data-title="No">{{j+1}}</td> --\x3e\r\n                    <td data-title="Register number">{{item.student_reg}}</td>\r\n                    <td data-title="Name">{{item.student_name}}</td>\r\n                    <td data-title="SMP"><input type="checkbox" [(ngModel)]="item.smp_status"\r\n                        value="{{item.smp_status}}" (change)="change($event)"> </td>\r\n                  </tr>\r\n                  <tr *ngFor="let items of absentData; let k=index">\r\n                    \x3c!-- <td data-title="No">{{k+1}}</td> --\x3e\r\n                    <td data-title=" Register number" style="color:red;">{{items.student_reg}}</td>\r\n                    <td data-title="Name" style="color:red;">{{items.student_name}}</td>\r\n                    <td data-title="SMP" style="color:red;">Absent</td>\r\n                  </tr>\r\n                  \x3c!-- <div class="checkbox">\r\n                    <label id="declaration"><input type="checkbox" name="checked" [(ngModel)]="checked"\r\n                        #checkedControl="ngModel" required (change)="onSelect($event)">I hereby declare that the above\r\n                      submitted\r\n                      details are true.</label>\r\n                    <button [disabled]="disablebtn" (click)="save(item.center_id,item.course_id,exam_id)" type="submit"\r\n                      class="btn btn-primary btn-sm pull-right"><i class="fa fa-rocket"></i>&nbsp;Submit</button>\r\n                    <div class="clearfix"></div>\r\n                  </div> --\x3e\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div class="panel-footer panel-default">\r\n          \x3c!-- <form #m="ngForm" (ngSubmit)="submitAbsenteeList(m)"> --\x3e\r\n            <div class="checkbox" >\r\n              <label id="declaration"><input type="checkbox" name="checked" [(ngModel)]="checked"\r\n                  #checkedControl="ngModel" required (change)="onSelect($event)">I hereby declare that the above\r\n                submitted\r\n                details are true.</label>\r\n              <button [disabled]="disablebtn" type="submit" (click)="submitAbsenteeList()"\r\n                class="btn btn-primary btn-sm pull-right"><i class="fa fa-rocket"></i>&nbsp;Submit</button>\r\n              <div class="clearfix"></div>\r\n            </div>\r\n          \x3c!-- </form> --\x3e\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div *ngIf="nullMessage==true" class="red-text center error-message"\r\n      style="text-align: center;font-size: 15px;color:red;">\r\n      \x3c!-- No data is available for the selected examination --\x3e\r\n      Absentee statement already generated\r\n    </div>\r\n    </div>\r\n  </div>\r\n  \x3c!--  </div> --\x3e\r\n\r\n</section>'},xkgV:function(e,t,n){"use strict";n.d(t,"a",function(){return p});var s=n("CcnG"),r=n("Ip0R"),a=function(){function e(){this.change=new s.EventEmitter,this.instances={},this.DEFAULT_ID="DEFAULT_PAGINATION_ID"}return e.prototype.defaultId=function(){return this.DEFAULT_ID},e.prototype.register=function(e){(null==e.id&&(e.id=this.DEFAULT_ID),this.instances[e.id])?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){var t=!1;for(var n in this.instances[e.id])e[n]!==this.instances[e.id][n]&&(this.instances[e.id][n]=e[n],t=!0);return t},e.prototype.getCurrentPage=function(e){if(this.instances[e])return this.instances[e].currentPage},e.prototype.setCurrentPage=function(e,t){if(this.instances[e]){var n=this.instances[e];t<=Math.ceil(n.totalItems/n.itemsPerPage)&&1<=t&&(this.instances[e].currentPage=t,this.change.emit(e))}},e.prototype.setTotalItems=function(e,t){this.instances[e]&&0<=t&&(this.instances[e].totalItems=t,this.change.emit(e))},e.prototype.setItemsPerPage=function(e,t){this.instances[e]&&(this.instances[e].itemsPerPage=t,this.change.emit(e))},e.prototype.getInstance=function(e){return void 0===e&&(e=this.DEFAULT_ID),this.instances[e]?this.clone(this.instances[e]):{}},e.prototype.clone=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},e}(),i=Number.MAX_SAFE_INTEGER,o=function(){function e(e){this.service=e,this.state={}}return e.prototype.transform=function(e,t){if(t instanceof Array&&(t=t[0]),!(e instanceof Array)){var n=t.id||this.service.defaultId;return this.state[n]?this.state[n].slice:e}var s,r,a=t.totalItems&&t.totalItems!==e.length,o=this.createInstance(e,t),c=o.id,l=o.itemsPerPage;if(this.service.register(o),!a&&e instanceof Array){if(l=+l||i,r=(s=(o.currentPage-1)*l)+l,this.stateIsIdentical(c,e,s,r))return this.state[c].slice;var d=e.slice(s,r);return this.saveState(c,e,d,s,r),this.service.change.emit(c),d}return this.saveState(c,e,e,s,r),e},e.prototype.createInstance=function(e,t){var n=t;return this.checkConfig(n),{id:null!=n.id?n.id:this.service.defaultId(),itemsPerPage:+n.itemsPerPage||0,currentPage:+n.currentPage||1,totalItems:+n.totalItems||e.length}},e.prototype.checkConfig=function(e){var t=["itemsPerPage","currentPage"].filter(function(t){return!(t in e)});if(0<t.length)throw new Error("PaginatePipe: Argument is missing the following required properties: "+t.join(", "))},e.prototype.saveState=function(e,t,n,s,r){this.state[e]={collection:t,size:t.length,slice:n,start:s,end:r}},e.prototype.stateIsIdentical=function(e,t,n,s){var r=this.state[e];return!!r&&(!(r.size!==t.length||r.start!==n||r.end!==s)&&r.slice.every(function(e,s){return e===t[n+s]}))},e.decorators=[{type:s.Pipe,args:[{name:"paginate",pure:!1}]}],e.ctorParameters=function(){return[{type:a}]},e}();function c(e){return!!e&&"false"!==e}var l=function(){function e(){this.maxSize=7,this.previousLabel="Previous",this.nextLabel="Next",this.screenReaderPaginationLabel="Pagination",this.screenReaderPageLabel="page",this.screenReaderCurrentLabel="You're on page",this.pageChange=new s.EventEmitter,this._directionLinks=!0,this._autoHide=!1,this._responsive=!1}return Object.defineProperty(e.prototype,"directionLinks",{get:function(){return this._directionLinks},set:function(e){this._directionLinks=c(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"autoHide",{get:function(){return this._autoHide},set:function(e){this._autoHide=c(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"responsive",{get:function(){return this._responsive},set:function(e){this._responsive=c(e)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"pagination-controls",template:'\n    <pagination-template  #p="paginationApi"\n                         [id]="id"\n                         [maxSize]="maxSize"\n                         (pageChange)="pageChange.emit($event)">\n    <ul class="ngx-pagination" \n        role="navigation" \n        [attr.aria-label]="screenReaderPaginationLabel" \n        [class.responsive]="responsive"\n        *ngIf="!(autoHide && p.pages.length <= 1)">\n\n        <li class="pagination-previous" [class.disabled]="p.isFirstPage()" *ngIf="directionLinks"> \n            <a tabindex="0" *ngIf="1 < p.getCurrent()" (keyup.enter)="p.previous()" (click)="p.previous()" [attr.aria-label]="previousLabel + \' \' + screenReaderPageLabel">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isFirstPage()">\n                {{ previousLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class="small-screen">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]="p.getCurrent() === page.value" \n            [class.ellipsis]="page.label === \'...\'"\n            *ngFor="let page of p.pages">\n            <a tabindex="0" (keyup.enter)="p.setCurrent(page.value)" (click)="p.setCurrent(page.value)" *ngIf="p.getCurrent() !== page.value">\n                <span class="show-for-sr">{{ screenReaderPageLabel }} </span>\n                <span>{{ page.label }}</span>\n            </a>\n            <ng-container *ngIf="p.getCurrent() === page.value">\n                <span class="show-for-sr">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ page.label }}</span> \n            </ng-container>\n        </li>\n\n        <li class="pagination-next" [class.disabled]="p.isLastPage()" *ngIf="directionLinks">\n            <a tabindex="0" *ngIf="!p.isLastPage()" (keyup.enter)="p.next()" (click)="p.next()" [attr.aria-label]="nextLabel + \' \' + screenReaderPageLabel">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf="p.isLastPage()">\n                 {{ nextLabel }} <span class="show-for-sr">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </pagination-template>\n    ',styles:["\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xab';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xbb';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  "],changeDetection:s.ChangeDetectionStrategy.OnPush,encapsulation:s.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[]},e.propDecorators={id:[{type:s.Input}],maxSize:[{type:s.Input}],directionLinks:[{type:s.Input}],autoHide:[{type:s.Input}],responsive:[{type:s.Input}],previousLabel:[{type:s.Input}],nextLabel:[{type:s.Input}],screenReaderPaginationLabel:[{type:s.Input}],screenReaderPageLabel:[{type:s.Input}],screenReaderCurrentLabel:[{type:s.Input}],pageChange:[{type:s.Output}]},e}(),d=function(){function e(e,t){var n=this;this.service=e,this.changeDetectorRef=t,this.maxSize=7,this.pageChange=new s.EventEmitter,this.pages=[],this.changeSub=this.service.change.subscribe(function(e){n.id===e&&(n.updatePageLinks(),n.changeDetectorRef.markForCheck(),n.changeDetectorRef.detectChanges())})}return e.prototype.ngOnInit=function(){void 0===this.id&&(this.id=this.service.defaultId()),this.updatePageLinks()},e.prototype.ngOnChanges=function(e){this.updatePageLinks()},e.prototype.ngOnDestroy=function(){this.changeSub.unsubscribe()},e.prototype.previous=function(){this.checkValidId(),this.setCurrent(this.getCurrent()-1)},e.prototype.next=function(){this.checkValidId(),this.setCurrent(this.getCurrent()+1)},e.prototype.isFirstPage=function(){return 1===this.getCurrent()},e.prototype.isLastPage=function(){return this.getLastPage()===this.getCurrent()},e.prototype.setCurrent=function(e){this.pageChange.emit(e)},e.prototype.getCurrent=function(){return this.service.getCurrentPage(this.id)},e.prototype.getLastPage=function(){var e=this.service.getInstance(this.id);return e.totalItems<1?1:Math.ceil(e.totalItems/e.itemsPerPage)},e.prototype.getTotalItems=function(){return this.service.getInstance(this.id).totalItems},e.prototype.checkValidId=function(){null==this.service.getInstance(this.id).id&&console.warn('PaginationControlsDirective: the specified id "'+this.id+'" does not match any registered PaginationInstance')},e.prototype.updatePageLinks=function(){var e=this,t=this.service.getInstance(this.id),n=this.outOfBoundCorrection(t);n!==t.currentPage?setTimeout(function(){e.setCurrent(n),e.pages=e.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,e.maxSize)}):this.pages=this.createPageArray(t.currentPage,t.itemsPerPage,t.totalItems,this.maxSize)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.createPageArray=function(e,t,n,s){s=+s;for(var r=[],a=Math.ceil(n/t),i=Math.ceil(s/2),o=e<=i,c=a-i<e,l=!o&&!c,d=s<a,p=1;p<=a&&p<=s;){var u=void 0,g=this.calculatePageNumber(p,e,s,a);u=d&&(2===p&&(l||c)||p===s-1&&(l||o))?"...":g,r.push({label:u,value:g}),p++}return r},e.prototype.calculatePageNumber=function(e,t,n,s){var r=Math.ceil(n/2);return e===n?s:1===e?e:n<s?s-r<t?s-n+e:r<t?t-r+e:e:e},e.decorators=[{type:s.Directive,args:[{selector:"pagination-template,[pagination-template]",exportAs:"paginationApi"}]}],e.ctorParameters=function(){return[{type:a},{type:s.ChangeDetectorRef}]},e.propDecorators={id:[{type:s.Input}],maxSize:[{type:s.Input}],pageChange:[{type:s.Output}]},e}(),p=function(){function e(){}return e.decorators=[{type:s.NgModule,args:[{imports:[r.CommonModule],declarations:[o,l,d],providers:[a],exports:[o,l,d]}]}],e.ctorParameters=function(){return[]},e}()}}]);